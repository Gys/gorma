// ************************************************************
// DO NOT EDIT.
// THIS FILE IS AUTO-GENERATED BY codecgen.
// ************************************************************

package app

import (
	"errors"
	"fmt"
	pkg1_goa "github.com/goadesign/goa"
	codec1978 "github.com/ugorji/go/codec"
	pkg2_context "golang.org/x/net/context"
	pkg3_log15_v2 "gopkg.in/inconshreveable/log15.v2"
	"reflect"
	"runtime"
	time "time"
)

const (
	// ----- content types ----
	codecSelferC_UTF8212 = 1
	codecSelferC_RAW212  = 0
	// ----- value types used ----
	codecSelferValueTypeArray212 = 10
	codecSelferValueTypeMap212   = 9
	// ----- containerStateValues ----
	codecSelfer_containerMapKey212    = 2
	codecSelfer_containerMapValue212  = 3
	codecSelfer_containerMapEnd212    = 4
	codecSelfer_containerArrayElem212 = 6
	codecSelfer_containerArrayEnd212  = 7
)

var (
	codecSelferBitsize212                         = uint8(reflect.TypeOf(uint(0)).Bits())
	codecSelferOnlyMapOrArrayEncodeToStructErr212 = errors.New(`only encoded map or array can be decoded into a struct`)
)

type codecSelfer212 struct{}

func init() {
	if codec1978.GenVersion != 5 {
		_, file, _, _ := runtime.Caller(0)
		err := fmt.Errorf("codecgen version mismatch: current: %v, need %v. Re-generate file: %v",
			5, codec1978.GenVersion, file)
		panic(err)
	}
	if false { // reference the types, but skip this branch at build/run time
		var v0 pkg1_goa.Context
		var v1 pkg2_context.Context
		var v2 pkg3_log15_v2.Logger
		var v3 time.Time
		_, _, _, _ = v0, v1, v2, v3
	}
}

func (x *CreateAccountContext) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 3
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if x.Payload == nil {
					r.EncodeNil()
				} else {
					x.Payload.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Payload"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if x.Payload == nil {
					r.EncodeNil()
				} else {
					x.Payload.CodecEncodeSelf(e)
				}
			}
			var yyn6 bool
			if x.Context == nil {
				yyn6 = true
				goto LABEL6
			}
		LABEL6:
			if yyr2 || yy2arr2 {
				if yyn6 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym7 := z.EncBinary()
						_ = yym7
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Context"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn6 {
					r.EncodeNil()
				} else {
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym8 := z.EncBinary()
						_ = yym8
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			}
			var yyn9 bool
			if x.Context == nil {
				yyn9 = true
				goto LABEL9
			}
		LABEL9:
			if yyr2 || yy2arr2 {
				if yyn9 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym10 := z.EncBinary()
						_ = yym10
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Logger"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn9 {
					r.EncodeNil()
				} else {
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym11 := z.EncBinary()
						_ = yym11
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *CreateAccountContext) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym12 := z.DecBinary()
	_ = yym12
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct13 := r.ContainerType()
		if yyct13 == codecSelferValueTypeMap212 {
			yyl13 := r.ReadMapStart()
			if yyl13 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl13, d)
			}
		} else if yyct13 == codecSelferValueTypeArray212 {
			yyl13 := r.ReadArrayStart()
			if yyl13 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl13, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *CreateAccountContext) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys14Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys14Slc
	var yyhl14 bool = l >= 0
	for yyj14 := 0; ; yyj14++ {
		if yyhl14 {
			if yyj14 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys14Slc = r.DecodeBytes(yys14Slc, true, true)
		yys14 := string(yys14Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys14 {
		case "Payload":
			if r.TryDecodeAsNil() {
				if x.Payload != nil {
					x.Payload = nil
				}
			} else {
				if x.Payload == nil {
					x.Payload = new(CreateAccountPayload)
				}
				x.Payload.CodecDecodeSelf(d)
			}
		case "Context":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Context = nil
			} else {
				yyv16 := &x.Context
				yym17 := z.DecBinary()
				_ = yym17
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv16) {
				} else {
					z.DecFallback(yyv16, true)
				}
			}
		case "Logger":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Logger = nil
			} else {
				yyv18 := &x.Logger
				yym19 := z.DecBinary()
				_ = yym19
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv18) {
				} else {
					z.DecFallback(yyv18, true)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys14)
		} // end switch yys14
	} // end for yyj14
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *CreateAccountContext) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj20 int
	var yyb20 bool
	var yyhl20 bool = l >= 0
	yyj20++
	if yyhl20 {
		yyb20 = yyj20 > l
	} else {
		yyb20 = r.CheckBreak()
	}
	if yyb20 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Payload != nil {
			x.Payload = nil
		}
	} else {
		if x.Payload == nil {
			x.Payload = new(CreateAccountPayload)
		}
		x.Payload.CodecDecodeSelf(d)
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj20++
	if yyhl20 {
		yyb20 = yyj20 > l
	} else {
		yyb20 = r.CheckBreak()
	}
	if yyb20 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Context = nil
	} else {
		yyv22 := &x.Context
		yym23 := z.DecBinary()
		_ = yym23
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv22) {
		} else {
			z.DecFallback(yyv22, true)
		}
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj20++
	if yyhl20 {
		yyb20 = yyj20 > l
	} else {
		yyb20 = r.CheckBreak()
	}
	if yyb20 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Logger = nil
	} else {
		yyv24 := &x.Logger
		yym25 := z.DecBinary()
		_ = yym25
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv24) {
		} else {
			z.DecFallback(yyv24, true)
		}
	}
	for {
		yyj20++
		if yyhl20 {
			yyb20 = yyj20 > l
		} else {
			yyb20 = r.CheckBreak()
		}
		if yyb20 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj20-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *CreateAccountPayload) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym26 := z.EncBinary()
		_ = yym26
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep27 := !z.EncBinary()
			yy2arr27 := z.EncBasicHandle().StructToArray
			var yyq27 [1]bool
			_, _, _ = yysep27, yyq27, yy2arr27
			const yyr27 bool = false
			var yynn27 int
			if yyr27 || yy2arr27 {
				r.EncodeArrayStart(1)
			} else {
				yynn27 = 1
				for _, b := range yyq27 {
					if b {
						yynn27++
					}
				}
				r.EncodeMapStart(yynn27)
				yynn27 = 0
			}
			if yyr27 || yy2arr27 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym29 := z.EncBinary()
				_ = yym29
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym30 := z.EncBinary()
				_ = yym30
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			}
			if yyr27 || yy2arr27 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *CreateAccountPayload) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym31 := z.DecBinary()
	_ = yym31
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct32 := r.ContainerType()
		if yyct32 == codecSelferValueTypeMap212 {
			yyl32 := r.ReadMapStart()
			if yyl32 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl32, d)
			}
		} else if yyct32 == codecSelferValueTypeArray212 {
			yyl32 := r.ReadArrayStart()
			if yyl32 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl32, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *CreateAccountPayload) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys33Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys33Slc
	var yyhl33 bool = l >= 0
	for yyj33 := 0; ; yyj33++ {
		if yyhl33 {
			if yyj33 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys33Slc = r.DecodeBytes(yys33Slc, true, true)
		yys33 := string(yys33Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys33 {
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys33)
		} // end switch yys33
	} // end for yyj33
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *CreateAccountPayload) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj35 int
	var yyb35 bool
	var yyhl35 bool = l >= 0
	yyj35++
	if yyhl35 {
		yyb35 = yyj35 > l
	} else {
		yyb35 = r.CheckBreak()
	}
	if yyb35 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	for {
		yyj35++
		if yyhl35 {
			yyb35 = yyj35 > l
		} else {
			yyb35 = r.CheckBreak()
		}
		if yyb35 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj35-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *DeleteAccountContext) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym37 := z.EncBinary()
		_ = yym37
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep38 := !z.EncBinary()
			yy2arr38 := z.EncBasicHandle().StructToArray
			var yyq38 [3]bool
			_, _, _ = yysep38, yyq38, yy2arr38
			const yyr38 bool = false
			var yynn38 int
			if yyr38 || yy2arr38 {
				r.EncodeArrayStart(3)
			} else {
				yynn38 = 3
				for _, b := range yyq38 {
					if b {
						yynn38++
					}
				}
				r.EncodeMapStart(yynn38)
				yynn38 = 0
			}
			if yyr38 || yy2arr38 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym40 := z.EncBinary()
				_ = yym40
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("AccountID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym41 := z.EncBinary()
				_ = yym41
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			}
			var yyn42 bool
			if x.Context == nil {
				yyn42 = true
				goto LABEL42
			}
		LABEL42:
			if yyr38 || yy2arr38 {
				if yyn42 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym43 := z.EncBinary()
						_ = yym43
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Context"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn42 {
					r.EncodeNil()
				} else {
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym44 := z.EncBinary()
						_ = yym44
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			}
			var yyn45 bool
			if x.Context == nil {
				yyn45 = true
				goto LABEL45
			}
		LABEL45:
			if yyr38 || yy2arr38 {
				if yyn45 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym46 := z.EncBinary()
						_ = yym46
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Logger"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn45 {
					r.EncodeNil()
				} else {
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym47 := z.EncBinary()
						_ = yym47
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			}
			if yyr38 || yy2arr38 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *DeleteAccountContext) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym48 := z.DecBinary()
	_ = yym48
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct49 := r.ContainerType()
		if yyct49 == codecSelferValueTypeMap212 {
			yyl49 := r.ReadMapStart()
			if yyl49 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl49, d)
			}
		} else if yyct49 == codecSelferValueTypeArray212 {
			yyl49 := r.ReadArrayStart()
			if yyl49 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl49, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *DeleteAccountContext) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys50Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys50Slc
	var yyhl50 bool = l >= 0
	for yyj50 := 0; ; yyj50++ {
		if yyhl50 {
			if yyj50 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys50Slc = r.DecodeBytes(yys50Slc, true, true)
		yys50 := string(yys50Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys50 {
		case "AccountID":
			if r.TryDecodeAsNil() {
				x.AccountID = 0
			} else {
				x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "Context":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Context = nil
			} else {
				yyv52 := &x.Context
				yym53 := z.DecBinary()
				_ = yym53
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv52) {
				} else {
					z.DecFallback(yyv52, true)
				}
			}
		case "Logger":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Logger = nil
			} else {
				yyv54 := &x.Logger
				yym55 := z.DecBinary()
				_ = yym55
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv54) {
				} else {
					z.DecFallback(yyv54, true)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys50)
		} // end switch yys50
	} // end for yyj50
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *DeleteAccountContext) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj56 int
	var yyb56 bool
	var yyhl56 bool = l >= 0
	yyj56++
	if yyhl56 {
		yyb56 = yyj56 > l
	} else {
		yyb56 = r.CheckBreak()
	}
	if yyb56 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.AccountID = 0
	} else {
		x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj56++
	if yyhl56 {
		yyb56 = yyj56 > l
	} else {
		yyb56 = r.CheckBreak()
	}
	if yyb56 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Context = nil
	} else {
		yyv58 := &x.Context
		yym59 := z.DecBinary()
		_ = yym59
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv58) {
		} else {
			z.DecFallback(yyv58, true)
		}
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj56++
	if yyhl56 {
		yyb56 = yyj56 > l
	} else {
		yyb56 = r.CheckBreak()
	}
	if yyb56 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Logger = nil
	} else {
		yyv60 := &x.Logger
		yym61 := z.DecBinary()
		_ = yym61
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv60) {
		} else {
			z.DecFallback(yyv60, true)
		}
	}
	for {
		yyj56++
		if yyhl56 {
			yyb56 = yyj56 > l
		} else {
			yyb56 = r.CheckBreak()
		}
		if yyb56 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj56-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *ShowAccountContext) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym62 := z.EncBinary()
		_ = yym62
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep63 := !z.EncBinary()
			yy2arr63 := z.EncBasicHandle().StructToArray
			var yyq63 [3]bool
			_, _, _ = yysep63, yyq63, yy2arr63
			const yyr63 bool = false
			var yynn63 int
			if yyr63 || yy2arr63 {
				r.EncodeArrayStart(3)
			} else {
				yynn63 = 3
				for _, b := range yyq63 {
					if b {
						yynn63++
					}
				}
				r.EncodeMapStart(yynn63)
				yynn63 = 0
			}
			if yyr63 || yy2arr63 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym65 := z.EncBinary()
				_ = yym65
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("AccountID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym66 := z.EncBinary()
				_ = yym66
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			}
			var yyn67 bool
			if x.Context == nil {
				yyn67 = true
				goto LABEL67
			}
		LABEL67:
			if yyr63 || yy2arr63 {
				if yyn67 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym68 := z.EncBinary()
						_ = yym68
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Context"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn67 {
					r.EncodeNil()
				} else {
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym69 := z.EncBinary()
						_ = yym69
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			}
			var yyn70 bool
			if x.Context == nil {
				yyn70 = true
				goto LABEL70
			}
		LABEL70:
			if yyr63 || yy2arr63 {
				if yyn70 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym71 := z.EncBinary()
						_ = yym71
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Logger"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn70 {
					r.EncodeNil()
				} else {
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym72 := z.EncBinary()
						_ = yym72
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			}
			if yyr63 || yy2arr63 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *ShowAccountContext) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym73 := z.DecBinary()
	_ = yym73
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct74 := r.ContainerType()
		if yyct74 == codecSelferValueTypeMap212 {
			yyl74 := r.ReadMapStart()
			if yyl74 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl74, d)
			}
		} else if yyct74 == codecSelferValueTypeArray212 {
			yyl74 := r.ReadArrayStart()
			if yyl74 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl74, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *ShowAccountContext) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys75Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys75Slc
	var yyhl75 bool = l >= 0
	for yyj75 := 0; ; yyj75++ {
		if yyhl75 {
			if yyj75 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys75Slc = r.DecodeBytes(yys75Slc, true, true)
		yys75 := string(yys75Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys75 {
		case "AccountID":
			if r.TryDecodeAsNil() {
				x.AccountID = 0
			} else {
				x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "Context":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Context = nil
			} else {
				yyv77 := &x.Context
				yym78 := z.DecBinary()
				_ = yym78
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv77) {
				} else {
					z.DecFallback(yyv77, true)
				}
			}
		case "Logger":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Logger = nil
			} else {
				yyv79 := &x.Logger
				yym80 := z.DecBinary()
				_ = yym80
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv79) {
				} else {
					z.DecFallback(yyv79, true)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys75)
		} // end switch yys75
	} // end for yyj75
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *ShowAccountContext) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj81 int
	var yyb81 bool
	var yyhl81 bool = l >= 0
	yyj81++
	if yyhl81 {
		yyb81 = yyj81 > l
	} else {
		yyb81 = r.CheckBreak()
	}
	if yyb81 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.AccountID = 0
	} else {
		x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj81++
	if yyhl81 {
		yyb81 = yyj81 > l
	} else {
		yyb81 = r.CheckBreak()
	}
	if yyb81 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Context = nil
	} else {
		yyv83 := &x.Context
		yym84 := z.DecBinary()
		_ = yym84
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv83) {
		} else {
			z.DecFallback(yyv83, true)
		}
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj81++
	if yyhl81 {
		yyb81 = yyj81 > l
	} else {
		yyb81 = r.CheckBreak()
	}
	if yyb81 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Logger = nil
	} else {
		yyv85 := &x.Logger
		yym86 := z.DecBinary()
		_ = yym86
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv85) {
		} else {
			z.DecFallback(yyv85, true)
		}
	}
	for {
		yyj81++
		if yyhl81 {
			yyb81 = yyj81 > l
		} else {
			yyb81 = r.CheckBreak()
		}
		if yyb81 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj81-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *UpdateAccountContext) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym87 := z.EncBinary()
		_ = yym87
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep88 := !z.EncBinary()
			yy2arr88 := z.EncBasicHandle().StructToArray
			var yyq88 [4]bool
			_, _, _ = yysep88, yyq88, yy2arr88
			const yyr88 bool = false
			var yynn88 int
			if yyr88 || yy2arr88 {
				r.EncodeArrayStart(4)
			} else {
				yynn88 = 4
				for _, b := range yyq88 {
					if b {
						yynn88++
					}
				}
				r.EncodeMapStart(yynn88)
				yynn88 = 0
			}
			if yyr88 || yy2arr88 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym90 := z.EncBinary()
				_ = yym90
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("AccountID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym91 := z.EncBinary()
				_ = yym91
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			}
			if yyr88 || yy2arr88 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if x.Payload == nil {
					r.EncodeNil()
				} else {
					x.Payload.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Payload"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if x.Payload == nil {
					r.EncodeNil()
				} else {
					x.Payload.CodecEncodeSelf(e)
				}
			}
			var yyn95 bool
			if x.Context == nil {
				yyn95 = true
				goto LABEL95
			}
		LABEL95:
			if yyr88 || yy2arr88 {
				if yyn95 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym96 := z.EncBinary()
						_ = yym96
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Context"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn95 {
					r.EncodeNil()
				} else {
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym97 := z.EncBinary()
						_ = yym97
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			}
			var yyn98 bool
			if x.Context == nil {
				yyn98 = true
				goto LABEL98
			}
		LABEL98:
			if yyr88 || yy2arr88 {
				if yyn98 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym99 := z.EncBinary()
						_ = yym99
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Logger"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn98 {
					r.EncodeNil()
				} else {
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym100 := z.EncBinary()
						_ = yym100
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			}
			if yyr88 || yy2arr88 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *UpdateAccountContext) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym101 := z.DecBinary()
	_ = yym101
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct102 := r.ContainerType()
		if yyct102 == codecSelferValueTypeMap212 {
			yyl102 := r.ReadMapStart()
			if yyl102 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl102, d)
			}
		} else if yyct102 == codecSelferValueTypeArray212 {
			yyl102 := r.ReadArrayStart()
			if yyl102 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl102, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *UpdateAccountContext) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys103Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys103Slc
	var yyhl103 bool = l >= 0
	for yyj103 := 0; ; yyj103++ {
		if yyhl103 {
			if yyj103 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys103Slc = r.DecodeBytes(yys103Slc, true, true)
		yys103 := string(yys103Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys103 {
		case "AccountID":
			if r.TryDecodeAsNil() {
				x.AccountID = 0
			} else {
				x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "Payload":
			if r.TryDecodeAsNil() {
				if x.Payload != nil {
					x.Payload = nil
				}
			} else {
				if x.Payload == nil {
					x.Payload = new(UpdateAccountPayload)
				}
				x.Payload.CodecDecodeSelf(d)
			}
		case "Context":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Context = nil
			} else {
				yyv106 := &x.Context
				yym107 := z.DecBinary()
				_ = yym107
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv106) {
				} else {
					z.DecFallback(yyv106, true)
				}
			}
		case "Logger":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Logger = nil
			} else {
				yyv108 := &x.Logger
				yym109 := z.DecBinary()
				_ = yym109
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv108) {
				} else {
					z.DecFallback(yyv108, true)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys103)
		} // end switch yys103
	} // end for yyj103
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *UpdateAccountContext) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj110 int
	var yyb110 bool
	var yyhl110 bool = l >= 0
	yyj110++
	if yyhl110 {
		yyb110 = yyj110 > l
	} else {
		yyb110 = r.CheckBreak()
	}
	if yyb110 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.AccountID = 0
	} else {
		x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj110++
	if yyhl110 {
		yyb110 = yyj110 > l
	} else {
		yyb110 = r.CheckBreak()
	}
	if yyb110 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Payload != nil {
			x.Payload = nil
		}
	} else {
		if x.Payload == nil {
			x.Payload = new(UpdateAccountPayload)
		}
		x.Payload.CodecDecodeSelf(d)
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj110++
	if yyhl110 {
		yyb110 = yyj110 > l
	} else {
		yyb110 = r.CheckBreak()
	}
	if yyb110 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Context = nil
	} else {
		yyv113 := &x.Context
		yym114 := z.DecBinary()
		_ = yym114
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv113) {
		} else {
			z.DecFallback(yyv113, true)
		}
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj110++
	if yyhl110 {
		yyb110 = yyj110 > l
	} else {
		yyb110 = r.CheckBreak()
	}
	if yyb110 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Logger = nil
	} else {
		yyv115 := &x.Logger
		yym116 := z.DecBinary()
		_ = yym116
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv115) {
		} else {
			z.DecFallback(yyv115, true)
		}
	}
	for {
		yyj110++
		if yyhl110 {
			yyb110 = yyj110 > l
		} else {
			yyb110 = r.CheckBreak()
		}
		if yyb110 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj110-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *UpdateAccountPayload) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym117 := z.EncBinary()
		_ = yym117
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep118 := !z.EncBinary()
			yy2arr118 := z.EncBasicHandle().StructToArray
			var yyq118 [1]bool
			_, _, _ = yysep118, yyq118, yy2arr118
			const yyr118 bool = false
			var yynn118 int
			if yyr118 || yy2arr118 {
				r.EncodeArrayStart(1)
			} else {
				yynn118 = 1
				for _, b := range yyq118 {
					if b {
						yynn118++
					}
				}
				r.EncodeMapStart(yynn118)
				yynn118 = 0
			}
			if yyr118 || yy2arr118 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym120 := z.EncBinary()
				_ = yym120
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym121 := z.EncBinary()
				_ = yym121
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			}
			if yyr118 || yy2arr118 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *UpdateAccountPayload) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym122 := z.DecBinary()
	_ = yym122
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct123 := r.ContainerType()
		if yyct123 == codecSelferValueTypeMap212 {
			yyl123 := r.ReadMapStart()
			if yyl123 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl123, d)
			}
		} else if yyct123 == codecSelferValueTypeArray212 {
			yyl123 := r.ReadArrayStart()
			if yyl123 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl123, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *UpdateAccountPayload) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys124Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys124Slc
	var yyhl124 bool = l >= 0
	for yyj124 := 0; ; yyj124++ {
		if yyhl124 {
			if yyj124 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys124Slc = r.DecodeBytes(yys124Slc, true, true)
		yys124 := string(yys124Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys124 {
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys124)
		} // end switch yys124
	} // end for yyj124
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *UpdateAccountPayload) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj126 int
	var yyb126 bool
	var yyhl126 bool = l >= 0
	yyj126++
	if yyhl126 {
		yyb126 = yyj126 > l
	} else {
		yyb126 = r.CheckBreak()
	}
	if yyb126 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	for {
		yyj126++
		if yyhl126 {
			yyb126 = yyj126 > l
		} else {
			yyb126 = r.CheckBreak()
		}
		if yyb126 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj126-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *CreateBottleContext) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym128 := z.EncBinary()
		_ = yym128
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep129 := !z.EncBinary()
			yy2arr129 := z.EncBasicHandle().StructToArray
			var yyq129 [4]bool
			_, _, _ = yysep129, yyq129, yy2arr129
			const yyr129 bool = false
			var yynn129 int
			if yyr129 || yy2arr129 {
				r.EncodeArrayStart(4)
			} else {
				yynn129 = 4
				for _, b := range yyq129 {
					if b {
						yynn129++
					}
				}
				r.EncodeMapStart(yynn129)
				yynn129 = 0
			}
			if yyr129 || yy2arr129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym131 := z.EncBinary()
				_ = yym131
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("AccountID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym132 := z.EncBinary()
				_ = yym132
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			}
			if yyr129 || yy2arr129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if x.Payload == nil {
					r.EncodeNil()
				} else {
					x.Payload.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Payload"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if x.Payload == nil {
					r.EncodeNil()
				} else {
					x.Payload.CodecEncodeSelf(e)
				}
			}
			var yyn136 bool
			if x.Context == nil {
				yyn136 = true
				goto LABEL136
			}
		LABEL136:
			if yyr129 || yy2arr129 {
				if yyn136 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym137 := z.EncBinary()
						_ = yym137
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Context"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn136 {
					r.EncodeNil()
				} else {
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym138 := z.EncBinary()
						_ = yym138
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			}
			var yyn139 bool
			if x.Context == nil {
				yyn139 = true
				goto LABEL139
			}
		LABEL139:
			if yyr129 || yy2arr129 {
				if yyn139 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym140 := z.EncBinary()
						_ = yym140
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Logger"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn139 {
					r.EncodeNil()
				} else {
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym141 := z.EncBinary()
						_ = yym141
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			}
			if yyr129 || yy2arr129 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *CreateBottleContext) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym142 := z.DecBinary()
	_ = yym142
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct143 := r.ContainerType()
		if yyct143 == codecSelferValueTypeMap212 {
			yyl143 := r.ReadMapStart()
			if yyl143 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl143, d)
			}
		} else if yyct143 == codecSelferValueTypeArray212 {
			yyl143 := r.ReadArrayStart()
			if yyl143 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl143, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *CreateBottleContext) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys144Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys144Slc
	var yyhl144 bool = l >= 0
	for yyj144 := 0; ; yyj144++ {
		if yyhl144 {
			if yyj144 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys144Slc = r.DecodeBytes(yys144Slc, true, true)
		yys144 := string(yys144Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys144 {
		case "AccountID":
			if r.TryDecodeAsNil() {
				x.AccountID = 0
			} else {
				x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "Payload":
			if r.TryDecodeAsNil() {
				if x.Payload != nil {
					x.Payload = nil
				}
			} else {
				if x.Payload == nil {
					x.Payload = new(CreateBottlePayload)
				}
				x.Payload.CodecDecodeSelf(d)
			}
		case "Context":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Context = nil
			} else {
				yyv147 := &x.Context
				yym148 := z.DecBinary()
				_ = yym148
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv147) {
				} else {
					z.DecFallback(yyv147, true)
				}
			}
		case "Logger":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Logger = nil
			} else {
				yyv149 := &x.Logger
				yym150 := z.DecBinary()
				_ = yym150
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv149) {
				} else {
					z.DecFallback(yyv149, true)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys144)
		} // end switch yys144
	} // end for yyj144
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *CreateBottleContext) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj151 int
	var yyb151 bool
	var yyhl151 bool = l >= 0
	yyj151++
	if yyhl151 {
		yyb151 = yyj151 > l
	} else {
		yyb151 = r.CheckBreak()
	}
	if yyb151 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.AccountID = 0
	} else {
		x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj151++
	if yyhl151 {
		yyb151 = yyj151 > l
	} else {
		yyb151 = r.CheckBreak()
	}
	if yyb151 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Payload != nil {
			x.Payload = nil
		}
	} else {
		if x.Payload == nil {
			x.Payload = new(CreateBottlePayload)
		}
		x.Payload.CodecDecodeSelf(d)
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj151++
	if yyhl151 {
		yyb151 = yyj151 > l
	} else {
		yyb151 = r.CheckBreak()
	}
	if yyb151 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Context = nil
	} else {
		yyv154 := &x.Context
		yym155 := z.DecBinary()
		_ = yym155
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv154) {
		} else {
			z.DecFallback(yyv154, true)
		}
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj151++
	if yyhl151 {
		yyb151 = yyj151 > l
	} else {
		yyb151 = r.CheckBreak()
	}
	if yyb151 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Logger = nil
	} else {
		yyv156 := &x.Logger
		yym157 := z.DecBinary()
		_ = yym157
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv156) {
		} else {
			z.DecFallback(yyv156, true)
		}
	}
	for {
		yyj151++
		if yyhl151 {
			yyb151 = yyj151 > l
		} else {
			yyb151 = r.CheckBreak()
		}
		if yyb151 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj151-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *CreateBottlePayload) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym158 := z.EncBinary()
		_ = yym158
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep159 := !z.EncBinary()
			yy2arr159 := z.EncBasicHandle().StructToArray
			var yyq159 [10]bool
			_, _, _ = yysep159, yyq159, yy2arr159
			const yyr159 bool = false
			yyq159[1] = x.Country != nil
			yyq159[3] = x.Region != nil
			yyq159[4] = x.Review != nil
			yyq159[5] = x.Sweetness != nil
			yyq159[9] = x.VinyardCounty != nil
			var yynn159 int
			if yyr159 || yy2arr159 {
				r.EncodeArrayStart(10)
			} else {
				yynn159 = 5
				for _, b := range yyq159 {
					if b {
						yynn159++
					}
				}
				r.EncodeMapStart(yynn159)
				yynn159 = 0
			}
			if yyr159 || yy2arr159 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym161 := z.EncBinary()
				_ = yym161
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Color))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("color"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym162 := z.EncBinary()
				_ = yym162
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Color))
				}
			}
			if yyr159 || yy2arr159 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq159[1] {
					if x.Country == nil {
						r.EncodeNil()
					} else {
						yy164 := *x.Country
						yym165 := z.EncBinary()
						_ = yym165
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy164))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq159[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("country"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Country == nil {
						r.EncodeNil()
					} else {
						yy166 := *x.Country
						yym167 := z.EncBinary()
						_ = yym167
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy166))
						}
					}
				}
			}
			if yyr159 || yy2arr159 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym169 := z.EncBinary()
				_ = yym169
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym170 := z.EncBinary()
				_ = yym170
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			}
			if yyr159 || yy2arr159 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq159[3] {
					if x.Region == nil {
						r.EncodeNil()
					} else {
						yy172 := *x.Region
						yym173 := z.EncBinary()
						_ = yym173
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy172))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq159[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("region"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Region == nil {
						r.EncodeNil()
					} else {
						yy174 := *x.Region
						yym175 := z.EncBinary()
						_ = yym175
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy174))
						}
					}
				}
			}
			if yyr159 || yy2arr159 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq159[4] {
					if x.Review == nil {
						r.EncodeNil()
					} else {
						yy177 := *x.Review
						yym178 := z.EncBinary()
						_ = yym178
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy177))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq159[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("review"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Review == nil {
						r.EncodeNil()
					} else {
						yy179 := *x.Review
						yym180 := z.EncBinary()
						_ = yym180
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy179))
						}
					}
				}
			}
			if yyr159 || yy2arr159 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq159[5] {
					if x.Sweetness == nil {
						r.EncodeNil()
					} else {
						yy182 := *x.Sweetness
						yym183 := z.EncBinary()
						_ = yym183
						if false {
						} else {
							r.EncodeInt(int64(yy182))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq159[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("sweetness"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Sweetness == nil {
						r.EncodeNil()
					} else {
						yy184 := *x.Sweetness
						yym185 := z.EncBinary()
						_ = yym185
						if false {
						} else {
							r.EncodeInt(int64(yy184))
						}
					}
				}
			}
			if yyr159 || yy2arr159 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym187 := z.EncBinary()
				_ = yym187
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Varietal))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("varietal"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym188 := z.EncBinary()
				_ = yym188
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Varietal))
				}
			}
			if yyr159 || yy2arr159 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym190 := z.EncBinary()
				_ = yym190
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vineyard))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("vineyard"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym191 := z.EncBinary()
				_ = yym191
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vineyard))
				}
			}
			if yyr159 || yy2arr159 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym193 := z.EncBinary()
				_ = yym193
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vintage))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("vintage"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym194 := z.EncBinary()
				_ = yym194
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vintage))
				}
			}
			if yyr159 || yy2arr159 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq159[9] {
					if x.VinyardCounty == nil {
						r.EncodeNil()
					} else {
						yy196 := *x.VinyardCounty
						yym197 := z.EncBinary()
						_ = yym197
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy196))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq159[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("vinyard_county"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.VinyardCounty == nil {
						r.EncodeNil()
					} else {
						yy198 := *x.VinyardCounty
						yym199 := z.EncBinary()
						_ = yym199
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy198))
						}
					}
				}
			}
			if yyr159 || yy2arr159 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *CreateBottlePayload) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym200 := z.DecBinary()
	_ = yym200
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct201 := r.ContainerType()
		if yyct201 == codecSelferValueTypeMap212 {
			yyl201 := r.ReadMapStart()
			if yyl201 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl201, d)
			}
		} else if yyct201 == codecSelferValueTypeArray212 {
			yyl201 := r.ReadArrayStart()
			if yyl201 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl201, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *CreateBottlePayload) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys202Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys202Slc
	var yyhl202 bool = l >= 0
	for yyj202 := 0; ; yyj202++ {
		if yyhl202 {
			if yyj202 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys202Slc = r.DecodeBytes(yys202Slc, true, true)
		yys202 := string(yys202Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys202 {
		case "color":
			if r.TryDecodeAsNil() {
				x.Color = ""
			} else {
				x.Color = string(r.DecodeString())
			}
		case "country":
			if r.TryDecodeAsNil() {
				if x.Country != nil {
					x.Country = nil
				}
			} else {
				if x.Country == nil {
					x.Country = new(string)
				}
				yym205 := z.DecBinary()
				_ = yym205
				if false {
				} else {
					*((*string)(x.Country)) = r.DecodeString()
				}
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "region":
			if r.TryDecodeAsNil() {
				if x.Region != nil {
					x.Region = nil
				}
			} else {
				if x.Region == nil {
					x.Region = new(string)
				}
				yym208 := z.DecBinary()
				_ = yym208
				if false {
				} else {
					*((*string)(x.Region)) = r.DecodeString()
				}
			}
		case "review":
			if r.TryDecodeAsNil() {
				if x.Review != nil {
					x.Review = nil
				}
			} else {
				if x.Review == nil {
					x.Review = new(string)
				}
				yym210 := z.DecBinary()
				_ = yym210
				if false {
				} else {
					*((*string)(x.Review)) = r.DecodeString()
				}
			}
		case "sweetness":
			if r.TryDecodeAsNil() {
				if x.Sweetness != nil {
					x.Sweetness = nil
				}
			} else {
				if x.Sweetness == nil {
					x.Sweetness = new(int)
				}
				yym212 := z.DecBinary()
				_ = yym212
				if false {
				} else {
					*((*int)(x.Sweetness)) = int(r.DecodeInt(codecSelferBitsize212))
				}
			}
		case "varietal":
			if r.TryDecodeAsNil() {
				x.Varietal = ""
			} else {
				x.Varietal = string(r.DecodeString())
			}
		case "vineyard":
			if r.TryDecodeAsNil() {
				x.Vineyard = ""
			} else {
				x.Vineyard = string(r.DecodeString())
			}
		case "vintage":
			if r.TryDecodeAsNil() {
				x.Vintage = ""
			} else {
				x.Vintage = string(r.DecodeString())
			}
		case "vinyard_county":
			if r.TryDecodeAsNil() {
				if x.VinyardCounty != nil {
					x.VinyardCounty = nil
				}
			} else {
				if x.VinyardCounty == nil {
					x.VinyardCounty = new(string)
				}
				yym217 := z.DecBinary()
				_ = yym217
				if false {
				} else {
					*((*string)(x.VinyardCounty)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys202)
		} // end switch yys202
	} // end for yyj202
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *CreateBottlePayload) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj218 int
	var yyb218 bool
	var yyhl218 bool = l >= 0
	yyj218++
	if yyhl218 {
		yyb218 = yyj218 > l
	} else {
		yyb218 = r.CheckBreak()
	}
	if yyb218 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Color = ""
	} else {
		x.Color = string(r.DecodeString())
	}
	yyj218++
	if yyhl218 {
		yyb218 = yyj218 > l
	} else {
		yyb218 = r.CheckBreak()
	}
	if yyb218 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Country != nil {
			x.Country = nil
		}
	} else {
		if x.Country == nil {
			x.Country = new(string)
		}
		yym221 := z.DecBinary()
		_ = yym221
		if false {
		} else {
			*((*string)(x.Country)) = r.DecodeString()
		}
	}
	yyj218++
	if yyhl218 {
		yyb218 = yyj218 > l
	} else {
		yyb218 = r.CheckBreak()
	}
	if yyb218 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj218++
	if yyhl218 {
		yyb218 = yyj218 > l
	} else {
		yyb218 = r.CheckBreak()
	}
	if yyb218 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Region != nil {
			x.Region = nil
		}
	} else {
		if x.Region == nil {
			x.Region = new(string)
		}
		yym224 := z.DecBinary()
		_ = yym224
		if false {
		} else {
			*((*string)(x.Region)) = r.DecodeString()
		}
	}
	yyj218++
	if yyhl218 {
		yyb218 = yyj218 > l
	} else {
		yyb218 = r.CheckBreak()
	}
	if yyb218 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Review != nil {
			x.Review = nil
		}
	} else {
		if x.Review == nil {
			x.Review = new(string)
		}
		yym226 := z.DecBinary()
		_ = yym226
		if false {
		} else {
			*((*string)(x.Review)) = r.DecodeString()
		}
	}
	yyj218++
	if yyhl218 {
		yyb218 = yyj218 > l
	} else {
		yyb218 = r.CheckBreak()
	}
	if yyb218 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Sweetness != nil {
			x.Sweetness = nil
		}
	} else {
		if x.Sweetness == nil {
			x.Sweetness = new(int)
		}
		yym228 := z.DecBinary()
		_ = yym228
		if false {
		} else {
			*((*int)(x.Sweetness)) = int(r.DecodeInt(codecSelferBitsize212))
		}
	}
	yyj218++
	if yyhl218 {
		yyb218 = yyj218 > l
	} else {
		yyb218 = r.CheckBreak()
	}
	if yyb218 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Varietal = ""
	} else {
		x.Varietal = string(r.DecodeString())
	}
	yyj218++
	if yyhl218 {
		yyb218 = yyj218 > l
	} else {
		yyb218 = r.CheckBreak()
	}
	if yyb218 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Vineyard = ""
	} else {
		x.Vineyard = string(r.DecodeString())
	}
	yyj218++
	if yyhl218 {
		yyb218 = yyj218 > l
	} else {
		yyb218 = r.CheckBreak()
	}
	if yyb218 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Vintage = ""
	} else {
		x.Vintage = string(r.DecodeString())
	}
	yyj218++
	if yyhl218 {
		yyb218 = yyj218 > l
	} else {
		yyb218 = r.CheckBreak()
	}
	if yyb218 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.VinyardCounty != nil {
			x.VinyardCounty = nil
		}
	} else {
		if x.VinyardCounty == nil {
			x.VinyardCounty = new(string)
		}
		yym233 := z.DecBinary()
		_ = yym233
		if false {
		} else {
			*((*string)(x.VinyardCounty)) = r.DecodeString()
		}
	}
	for {
		yyj218++
		if yyhl218 {
			yyb218 = yyj218 > l
		} else {
			yyb218 = r.CheckBreak()
		}
		if yyb218 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj218-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *DeleteBottleContext) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym234 := z.EncBinary()
		_ = yym234
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep235 := !z.EncBinary()
			yy2arr235 := z.EncBasicHandle().StructToArray
			var yyq235 [4]bool
			_, _, _ = yysep235, yyq235, yy2arr235
			const yyr235 bool = false
			var yynn235 int
			if yyr235 || yy2arr235 {
				r.EncodeArrayStart(4)
			} else {
				yynn235 = 4
				for _, b := range yyq235 {
					if b {
						yynn235++
					}
				}
				r.EncodeMapStart(yynn235)
				yynn235 = 0
			}
			if yyr235 || yy2arr235 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym237 := z.EncBinary()
				_ = yym237
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("AccountID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym238 := z.EncBinary()
				_ = yym238
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			}
			if yyr235 || yy2arr235 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym240 := z.EncBinary()
				_ = yym240
				if false {
				} else {
					r.EncodeInt(int64(x.BottleID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("BottleID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym241 := z.EncBinary()
				_ = yym241
				if false {
				} else {
					r.EncodeInt(int64(x.BottleID))
				}
			}
			var yyn242 bool
			if x.Context == nil {
				yyn242 = true
				goto LABEL242
			}
		LABEL242:
			if yyr235 || yy2arr235 {
				if yyn242 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym243 := z.EncBinary()
						_ = yym243
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Context"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn242 {
					r.EncodeNil()
				} else {
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym244 := z.EncBinary()
						_ = yym244
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			}
			var yyn245 bool
			if x.Context == nil {
				yyn245 = true
				goto LABEL245
			}
		LABEL245:
			if yyr235 || yy2arr235 {
				if yyn245 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym246 := z.EncBinary()
						_ = yym246
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Logger"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn245 {
					r.EncodeNil()
				} else {
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym247 := z.EncBinary()
						_ = yym247
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			}
			if yyr235 || yy2arr235 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *DeleteBottleContext) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym248 := z.DecBinary()
	_ = yym248
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct249 := r.ContainerType()
		if yyct249 == codecSelferValueTypeMap212 {
			yyl249 := r.ReadMapStart()
			if yyl249 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl249, d)
			}
		} else if yyct249 == codecSelferValueTypeArray212 {
			yyl249 := r.ReadArrayStart()
			if yyl249 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl249, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *DeleteBottleContext) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys250Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys250Slc
	var yyhl250 bool = l >= 0
	for yyj250 := 0; ; yyj250++ {
		if yyhl250 {
			if yyj250 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys250Slc = r.DecodeBytes(yys250Slc, true, true)
		yys250 := string(yys250Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys250 {
		case "AccountID":
			if r.TryDecodeAsNil() {
				x.AccountID = 0
			} else {
				x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "BottleID":
			if r.TryDecodeAsNil() {
				x.BottleID = 0
			} else {
				x.BottleID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "Context":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Context = nil
			} else {
				yyv253 := &x.Context
				yym254 := z.DecBinary()
				_ = yym254
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv253) {
				} else {
					z.DecFallback(yyv253, true)
				}
			}
		case "Logger":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Logger = nil
			} else {
				yyv255 := &x.Logger
				yym256 := z.DecBinary()
				_ = yym256
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv255) {
				} else {
					z.DecFallback(yyv255, true)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys250)
		} // end switch yys250
	} // end for yyj250
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *DeleteBottleContext) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj257 int
	var yyb257 bool
	var yyhl257 bool = l >= 0
	yyj257++
	if yyhl257 {
		yyb257 = yyj257 > l
	} else {
		yyb257 = r.CheckBreak()
	}
	if yyb257 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.AccountID = 0
	} else {
		x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj257++
	if yyhl257 {
		yyb257 = yyj257 > l
	} else {
		yyb257 = r.CheckBreak()
	}
	if yyb257 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.BottleID = 0
	} else {
		x.BottleID = int(r.DecodeInt(codecSelferBitsize212))
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj257++
	if yyhl257 {
		yyb257 = yyj257 > l
	} else {
		yyb257 = r.CheckBreak()
	}
	if yyb257 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Context = nil
	} else {
		yyv260 := &x.Context
		yym261 := z.DecBinary()
		_ = yym261
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv260) {
		} else {
			z.DecFallback(yyv260, true)
		}
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj257++
	if yyhl257 {
		yyb257 = yyj257 > l
	} else {
		yyb257 = r.CheckBreak()
	}
	if yyb257 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Logger = nil
	} else {
		yyv262 := &x.Logger
		yym263 := z.DecBinary()
		_ = yym263
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv262) {
		} else {
			z.DecFallback(yyv262, true)
		}
	}
	for {
		yyj257++
		if yyhl257 {
			yyb257 = yyj257 > l
		} else {
			yyb257 = r.CheckBreak()
		}
		if yyb257 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj257-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *ListBottleContext) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym264 := z.EncBinary()
		_ = yym264
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep265 := !z.EncBinary()
			yy2arr265 := z.EncBasicHandle().StructToArray
			var yyq265 [4]bool
			_, _, _ = yysep265, yyq265, yy2arr265
			const yyr265 bool = false
			var yynn265 int
			if yyr265 || yy2arr265 {
				r.EncodeArrayStart(4)
			} else {
				yynn265 = 4
				for _, b := range yyq265 {
					if b {
						yynn265++
					}
				}
				r.EncodeMapStart(yynn265)
				yynn265 = 0
			}
			if yyr265 || yy2arr265 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym267 := z.EncBinary()
				_ = yym267
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("AccountID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym268 := z.EncBinary()
				_ = yym268
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			}
			if yyr265 || yy2arr265 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if x.Years == nil {
					r.EncodeNil()
				} else {
					yym270 := z.EncBinary()
					_ = yym270
					if false {
					} else {
						z.F.EncSliceIntV(x.Years, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Years"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if x.Years == nil {
					r.EncodeNil()
				} else {
					yym271 := z.EncBinary()
					_ = yym271
					if false {
					} else {
						z.F.EncSliceIntV(x.Years, false, e)
					}
				}
			}
			var yyn272 bool
			if x.Context == nil {
				yyn272 = true
				goto LABEL272
			}
		LABEL272:
			if yyr265 || yy2arr265 {
				if yyn272 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym273 := z.EncBinary()
						_ = yym273
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Context"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn272 {
					r.EncodeNil()
				} else {
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym274 := z.EncBinary()
						_ = yym274
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			}
			var yyn275 bool
			if x.Context == nil {
				yyn275 = true
				goto LABEL275
			}
		LABEL275:
			if yyr265 || yy2arr265 {
				if yyn275 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym276 := z.EncBinary()
						_ = yym276
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Logger"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn275 {
					r.EncodeNil()
				} else {
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym277 := z.EncBinary()
						_ = yym277
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			}
			if yyr265 || yy2arr265 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *ListBottleContext) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym278 := z.DecBinary()
	_ = yym278
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct279 := r.ContainerType()
		if yyct279 == codecSelferValueTypeMap212 {
			yyl279 := r.ReadMapStart()
			if yyl279 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl279, d)
			}
		} else if yyct279 == codecSelferValueTypeArray212 {
			yyl279 := r.ReadArrayStart()
			if yyl279 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl279, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *ListBottleContext) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys280Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys280Slc
	var yyhl280 bool = l >= 0
	for yyj280 := 0; ; yyj280++ {
		if yyhl280 {
			if yyj280 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys280Slc = r.DecodeBytes(yys280Slc, true, true)
		yys280 := string(yys280Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys280 {
		case "AccountID":
			if r.TryDecodeAsNil() {
				x.AccountID = 0
			} else {
				x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "Years":
			if r.TryDecodeAsNil() {
				x.Years = nil
			} else {
				yyv282 := &x.Years
				yym283 := z.DecBinary()
				_ = yym283
				if false {
				} else {
					z.F.DecSliceIntX(yyv282, false, d)
				}
			}
		case "Context":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Context = nil
			} else {
				yyv284 := &x.Context
				yym285 := z.DecBinary()
				_ = yym285
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv284) {
				} else {
					z.DecFallback(yyv284, true)
				}
			}
		case "Logger":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Logger = nil
			} else {
				yyv286 := &x.Logger
				yym287 := z.DecBinary()
				_ = yym287
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv286) {
				} else {
					z.DecFallback(yyv286, true)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys280)
		} // end switch yys280
	} // end for yyj280
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *ListBottleContext) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj288 int
	var yyb288 bool
	var yyhl288 bool = l >= 0
	yyj288++
	if yyhl288 {
		yyb288 = yyj288 > l
	} else {
		yyb288 = r.CheckBreak()
	}
	if yyb288 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.AccountID = 0
	} else {
		x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj288++
	if yyhl288 {
		yyb288 = yyj288 > l
	} else {
		yyb288 = r.CheckBreak()
	}
	if yyb288 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Years = nil
	} else {
		yyv290 := &x.Years
		yym291 := z.DecBinary()
		_ = yym291
		if false {
		} else {
			z.F.DecSliceIntX(yyv290, false, d)
		}
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj288++
	if yyhl288 {
		yyb288 = yyj288 > l
	} else {
		yyb288 = r.CheckBreak()
	}
	if yyb288 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Context = nil
	} else {
		yyv292 := &x.Context
		yym293 := z.DecBinary()
		_ = yym293
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv292) {
		} else {
			z.DecFallback(yyv292, true)
		}
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj288++
	if yyhl288 {
		yyb288 = yyj288 > l
	} else {
		yyb288 = r.CheckBreak()
	}
	if yyb288 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Logger = nil
	} else {
		yyv294 := &x.Logger
		yym295 := z.DecBinary()
		_ = yym295
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv294) {
		} else {
			z.DecFallback(yyv294, true)
		}
	}
	for {
		yyj288++
		if yyhl288 {
			yyb288 = yyj288 > l
		} else {
			yyb288 = r.CheckBreak()
		}
		if yyb288 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj288-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *RateBottleContext) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym296 := z.EncBinary()
		_ = yym296
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep297 := !z.EncBinary()
			yy2arr297 := z.EncBasicHandle().StructToArray
			var yyq297 [5]bool
			_, _, _ = yysep297, yyq297, yy2arr297
			const yyr297 bool = false
			var yynn297 int
			if yyr297 || yy2arr297 {
				r.EncodeArrayStart(5)
			} else {
				yynn297 = 5
				for _, b := range yyq297 {
					if b {
						yynn297++
					}
				}
				r.EncodeMapStart(yynn297)
				yynn297 = 0
			}
			if yyr297 || yy2arr297 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym299 := z.EncBinary()
				_ = yym299
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("AccountID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym300 := z.EncBinary()
				_ = yym300
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			}
			if yyr297 || yy2arr297 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym302 := z.EncBinary()
				_ = yym302
				if false {
				} else {
					r.EncodeInt(int64(x.BottleID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("BottleID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym303 := z.EncBinary()
				_ = yym303
				if false {
				} else {
					r.EncodeInt(int64(x.BottleID))
				}
			}
			if yyr297 || yy2arr297 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if x.Payload == nil {
					r.EncodeNil()
				} else {
					x.Payload.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Payload"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if x.Payload == nil {
					r.EncodeNil()
				} else {
					x.Payload.CodecEncodeSelf(e)
				}
			}
			var yyn307 bool
			if x.Context == nil {
				yyn307 = true
				goto LABEL307
			}
		LABEL307:
			if yyr297 || yy2arr297 {
				if yyn307 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym308 := z.EncBinary()
						_ = yym308
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Context"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn307 {
					r.EncodeNil()
				} else {
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym309 := z.EncBinary()
						_ = yym309
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			}
			var yyn310 bool
			if x.Context == nil {
				yyn310 = true
				goto LABEL310
			}
		LABEL310:
			if yyr297 || yy2arr297 {
				if yyn310 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym311 := z.EncBinary()
						_ = yym311
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Logger"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn310 {
					r.EncodeNil()
				} else {
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym312 := z.EncBinary()
						_ = yym312
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			}
			if yyr297 || yy2arr297 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *RateBottleContext) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym313 := z.DecBinary()
	_ = yym313
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct314 := r.ContainerType()
		if yyct314 == codecSelferValueTypeMap212 {
			yyl314 := r.ReadMapStart()
			if yyl314 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl314, d)
			}
		} else if yyct314 == codecSelferValueTypeArray212 {
			yyl314 := r.ReadArrayStart()
			if yyl314 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl314, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *RateBottleContext) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys315Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys315Slc
	var yyhl315 bool = l >= 0
	for yyj315 := 0; ; yyj315++ {
		if yyhl315 {
			if yyj315 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys315Slc = r.DecodeBytes(yys315Slc, true, true)
		yys315 := string(yys315Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys315 {
		case "AccountID":
			if r.TryDecodeAsNil() {
				x.AccountID = 0
			} else {
				x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "BottleID":
			if r.TryDecodeAsNil() {
				x.BottleID = 0
			} else {
				x.BottleID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "Payload":
			if r.TryDecodeAsNil() {
				if x.Payload != nil {
					x.Payload = nil
				}
			} else {
				if x.Payload == nil {
					x.Payload = new(RateBottlePayload)
				}
				x.Payload.CodecDecodeSelf(d)
			}
		case "Context":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Context = nil
			} else {
				yyv319 := &x.Context
				yym320 := z.DecBinary()
				_ = yym320
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv319) {
				} else {
					z.DecFallback(yyv319, true)
				}
			}
		case "Logger":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Logger = nil
			} else {
				yyv321 := &x.Logger
				yym322 := z.DecBinary()
				_ = yym322
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv321) {
				} else {
					z.DecFallback(yyv321, true)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys315)
		} // end switch yys315
	} // end for yyj315
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *RateBottleContext) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj323 int
	var yyb323 bool
	var yyhl323 bool = l >= 0
	yyj323++
	if yyhl323 {
		yyb323 = yyj323 > l
	} else {
		yyb323 = r.CheckBreak()
	}
	if yyb323 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.AccountID = 0
	} else {
		x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj323++
	if yyhl323 {
		yyb323 = yyj323 > l
	} else {
		yyb323 = r.CheckBreak()
	}
	if yyb323 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.BottleID = 0
	} else {
		x.BottleID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj323++
	if yyhl323 {
		yyb323 = yyj323 > l
	} else {
		yyb323 = r.CheckBreak()
	}
	if yyb323 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Payload != nil {
			x.Payload = nil
		}
	} else {
		if x.Payload == nil {
			x.Payload = new(RateBottlePayload)
		}
		x.Payload.CodecDecodeSelf(d)
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj323++
	if yyhl323 {
		yyb323 = yyj323 > l
	} else {
		yyb323 = r.CheckBreak()
	}
	if yyb323 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Context = nil
	} else {
		yyv327 := &x.Context
		yym328 := z.DecBinary()
		_ = yym328
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv327) {
		} else {
			z.DecFallback(yyv327, true)
		}
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj323++
	if yyhl323 {
		yyb323 = yyj323 > l
	} else {
		yyb323 = r.CheckBreak()
	}
	if yyb323 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Logger = nil
	} else {
		yyv329 := &x.Logger
		yym330 := z.DecBinary()
		_ = yym330
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv329) {
		} else {
			z.DecFallback(yyv329, true)
		}
	}
	for {
		yyj323++
		if yyhl323 {
			yyb323 = yyj323 > l
		} else {
			yyb323 = r.CheckBreak()
		}
		if yyb323 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj323-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *RateBottlePayload) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym331 := z.EncBinary()
		_ = yym331
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep332 := !z.EncBinary()
			yy2arr332 := z.EncBasicHandle().StructToArray
			var yyq332 [1]bool
			_, _, _ = yysep332, yyq332, yy2arr332
			const yyr332 bool = false
			var yynn332 int
			if yyr332 || yy2arr332 {
				r.EncodeArrayStart(1)
			} else {
				yynn332 = 1
				for _, b := range yyq332 {
					if b {
						yynn332++
					}
				}
				r.EncodeMapStart(yynn332)
				yynn332 = 0
			}
			if yyr332 || yy2arr332 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym334 := z.EncBinary()
				_ = yym334
				if false {
				} else {
					r.EncodeInt(int64(x.Rating))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("rating"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym335 := z.EncBinary()
				_ = yym335
				if false {
				} else {
					r.EncodeInt(int64(x.Rating))
				}
			}
			if yyr332 || yy2arr332 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *RateBottlePayload) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym336 := z.DecBinary()
	_ = yym336
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct337 := r.ContainerType()
		if yyct337 == codecSelferValueTypeMap212 {
			yyl337 := r.ReadMapStart()
			if yyl337 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl337, d)
			}
		} else if yyct337 == codecSelferValueTypeArray212 {
			yyl337 := r.ReadArrayStart()
			if yyl337 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl337, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *RateBottlePayload) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys338Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys338Slc
	var yyhl338 bool = l >= 0
	for yyj338 := 0; ; yyj338++ {
		if yyhl338 {
			if yyj338 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys338Slc = r.DecodeBytes(yys338Slc, true, true)
		yys338 := string(yys338Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys338 {
		case "rating":
			if r.TryDecodeAsNil() {
				x.Rating = 0
			} else {
				x.Rating = int(r.DecodeInt(codecSelferBitsize212))
			}
		default:
			z.DecStructFieldNotFound(-1, yys338)
		} // end switch yys338
	} // end for yyj338
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *RateBottlePayload) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj340 int
	var yyb340 bool
	var yyhl340 bool = l >= 0
	yyj340++
	if yyhl340 {
		yyb340 = yyj340 > l
	} else {
		yyb340 = r.CheckBreak()
	}
	if yyb340 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Rating = 0
	} else {
		x.Rating = int(r.DecodeInt(codecSelferBitsize212))
	}
	for {
		yyj340++
		if yyhl340 {
			yyb340 = yyj340 > l
		} else {
			yyb340 = r.CheckBreak()
		}
		if yyb340 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj340-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *ShowBottleContext) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym342 := z.EncBinary()
		_ = yym342
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep343 := !z.EncBinary()
			yy2arr343 := z.EncBasicHandle().StructToArray
			var yyq343 [4]bool
			_, _, _ = yysep343, yyq343, yy2arr343
			const yyr343 bool = false
			var yynn343 int
			if yyr343 || yy2arr343 {
				r.EncodeArrayStart(4)
			} else {
				yynn343 = 4
				for _, b := range yyq343 {
					if b {
						yynn343++
					}
				}
				r.EncodeMapStart(yynn343)
				yynn343 = 0
			}
			if yyr343 || yy2arr343 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym345 := z.EncBinary()
				_ = yym345
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("AccountID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym346 := z.EncBinary()
				_ = yym346
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			}
			if yyr343 || yy2arr343 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym348 := z.EncBinary()
				_ = yym348
				if false {
				} else {
					r.EncodeInt(int64(x.BottleID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("BottleID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym349 := z.EncBinary()
				_ = yym349
				if false {
				} else {
					r.EncodeInt(int64(x.BottleID))
				}
			}
			var yyn350 bool
			if x.Context == nil {
				yyn350 = true
				goto LABEL350
			}
		LABEL350:
			if yyr343 || yy2arr343 {
				if yyn350 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym351 := z.EncBinary()
						_ = yym351
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Context"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn350 {
					r.EncodeNil()
				} else {
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym352 := z.EncBinary()
						_ = yym352
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			}
			var yyn353 bool
			if x.Context == nil {
				yyn353 = true
				goto LABEL353
			}
		LABEL353:
			if yyr343 || yy2arr343 {
				if yyn353 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym354 := z.EncBinary()
						_ = yym354
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Logger"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn353 {
					r.EncodeNil()
				} else {
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym355 := z.EncBinary()
						_ = yym355
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			}
			if yyr343 || yy2arr343 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *ShowBottleContext) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym356 := z.DecBinary()
	_ = yym356
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct357 := r.ContainerType()
		if yyct357 == codecSelferValueTypeMap212 {
			yyl357 := r.ReadMapStart()
			if yyl357 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl357, d)
			}
		} else if yyct357 == codecSelferValueTypeArray212 {
			yyl357 := r.ReadArrayStart()
			if yyl357 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl357, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *ShowBottleContext) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys358Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys358Slc
	var yyhl358 bool = l >= 0
	for yyj358 := 0; ; yyj358++ {
		if yyhl358 {
			if yyj358 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys358Slc = r.DecodeBytes(yys358Slc, true, true)
		yys358 := string(yys358Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys358 {
		case "AccountID":
			if r.TryDecodeAsNil() {
				x.AccountID = 0
			} else {
				x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "BottleID":
			if r.TryDecodeAsNil() {
				x.BottleID = 0
			} else {
				x.BottleID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "Context":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Context = nil
			} else {
				yyv361 := &x.Context
				yym362 := z.DecBinary()
				_ = yym362
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv361) {
				} else {
					z.DecFallback(yyv361, true)
				}
			}
		case "Logger":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Logger = nil
			} else {
				yyv363 := &x.Logger
				yym364 := z.DecBinary()
				_ = yym364
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv363) {
				} else {
					z.DecFallback(yyv363, true)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys358)
		} // end switch yys358
	} // end for yyj358
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *ShowBottleContext) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj365 int
	var yyb365 bool
	var yyhl365 bool = l >= 0
	yyj365++
	if yyhl365 {
		yyb365 = yyj365 > l
	} else {
		yyb365 = r.CheckBreak()
	}
	if yyb365 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.AccountID = 0
	} else {
		x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj365++
	if yyhl365 {
		yyb365 = yyj365 > l
	} else {
		yyb365 = r.CheckBreak()
	}
	if yyb365 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.BottleID = 0
	} else {
		x.BottleID = int(r.DecodeInt(codecSelferBitsize212))
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj365++
	if yyhl365 {
		yyb365 = yyj365 > l
	} else {
		yyb365 = r.CheckBreak()
	}
	if yyb365 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Context = nil
	} else {
		yyv368 := &x.Context
		yym369 := z.DecBinary()
		_ = yym369
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv368) {
		} else {
			z.DecFallback(yyv368, true)
		}
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj365++
	if yyhl365 {
		yyb365 = yyj365 > l
	} else {
		yyb365 = r.CheckBreak()
	}
	if yyb365 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Logger = nil
	} else {
		yyv370 := &x.Logger
		yym371 := z.DecBinary()
		_ = yym371
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv370) {
		} else {
			z.DecFallback(yyv370, true)
		}
	}
	for {
		yyj365++
		if yyhl365 {
			yyb365 = yyj365 > l
		} else {
			yyb365 = r.CheckBreak()
		}
		if yyb365 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj365-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *UpdateBottleContext) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym372 := z.EncBinary()
		_ = yym372
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep373 := !z.EncBinary()
			yy2arr373 := z.EncBasicHandle().StructToArray
			var yyq373 [5]bool
			_, _, _ = yysep373, yyq373, yy2arr373
			const yyr373 bool = false
			var yynn373 int
			if yyr373 || yy2arr373 {
				r.EncodeArrayStart(5)
			} else {
				yynn373 = 5
				for _, b := range yyq373 {
					if b {
						yynn373++
					}
				}
				r.EncodeMapStart(yynn373)
				yynn373 = 0
			}
			if yyr373 || yy2arr373 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym375 := z.EncBinary()
				_ = yym375
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("AccountID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym376 := z.EncBinary()
				_ = yym376
				if false {
				} else {
					r.EncodeInt(int64(x.AccountID))
				}
			}
			if yyr373 || yy2arr373 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym378 := z.EncBinary()
				_ = yym378
				if false {
				} else {
					r.EncodeInt(int64(x.BottleID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("BottleID"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym379 := z.EncBinary()
				_ = yym379
				if false {
				} else {
					r.EncodeInt(int64(x.BottleID))
				}
			}
			if yyr373 || yy2arr373 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if x.Payload == nil {
					r.EncodeNil()
				} else {
					x.Payload.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Payload"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if x.Payload == nil {
					r.EncodeNil()
				} else {
					x.Payload.CodecEncodeSelf(e)
				}
			}
			var yyn383 bool
			if x.Context == nil {
				yyn383 = true
				goto LABEL383
			}
		LABEL383:
			if yyr373 || yy2arr373 {
				if yyn383 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym384 := z.EncBinary()
						_ = yym384
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Context"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn383 {
					r.EncodeNil()
				} else {
					if x.Context == nil {
						r.EncodeNil()
					} else {
						yym385 := z.EncBinary()
						_ = yym385
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Context) {
						} else {
							z.EncFallback(x.Context)
						}
					}
				}
			}
			var yyn386 bool
			if x.Context == nil {
				yyn386 = true
				goto LABEL386
			}
		LABEL386:
			if yyr373 || yy2arr373 {
				if yyn386 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem212)
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym387 := z.EncBinary()
						_ = yym387
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("Logger"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				if yyn386 {
					r.EncodeNil()
				} else {
					if x.Logger == nil {
						r.EncodeNil()
					} else {
						yym388 := z.EncBinary()
						_ = yym388
						if false {
						} else if z.HasExtensions() && z.EncExt(x.Logger) {
						} else {
							z.EncFallback(x.Logger)
						}
					}
				}
			}
			if yyr373 || yy2arr373 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *UpdateBottleContext) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym389 := z.DecBinary()
	_ = yym389
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct390 := r.ContainerType()
		if yyct390 == codecSelferValueTypeMap212 {
			yyl390 := r.ReadMapStart()
			if yyl390 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl390, d)
			}
		} else if yyct390 == codecSelferValueTypeArray212 {
			yyl390 := r.ReadArrayStart()
			if yyl390 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl390, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *UpdateBottleContext) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys391Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys391Slc
	var yyhl391 bool = l >= 0
	for yyj391 := 0; ; yyj391++ {
		if yyhl391 {
			if yyj391 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys391Slc = r.DecodeBytes(yys391Slc, true, true)
		yys391 := string(yys391Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys391 {
		case "AccountID":
			if r.TryDecodeAsNil() {
				x.AccountID = 0
			} else {
				x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "BottleID":
			if r.TryDecodeAsNil() {
				x.BottleID = 0
			} else {
				x.BottleID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "Payload":
			if r.TryDecodeAsNil() {
				if x.Payload != nil {
					x.Payload = nil
				}
			} else {
				if x.Payload == nil {
					x.Payload = new(UpdateBottlePayload)
				}
				x.Payload.CodecDecodeSelf(d)
			}
		case "Context":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Context = nil
			} else {
				yyv395 := &x.Context
				yym396 := z.DecBinary()
				_ = yym396
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv395) {
				} else {
					z.DecFallback(yyv395, true)
				}
			}
		case "Logger":
			if x.Context == nil {
				x.Context = new(pkg1_goa.Context)
			}
			if r.TryDecodeAsNil() {
				x.Logger = nil
			} else {
				yyv397 := &x.Logger
				yym398 := z.DecBinary()
				_ = yym398
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv397) {
				} else {
					z.DecFallback(yyv397, true)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys391)
		} // end switch yys391
	} // end for yyj391
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *UpdateBottleContext) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj399 int
	var yyb399 bool
	var yyhl399 bool = l >= 0
	yyj399++
	if yyhl399 {
		yyb399 = yyj399 > l
	} else {
		yyb399 = r.CheckBreak()
	}
	if yyb399 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.AccountID = 0
	} else {
		x.AccountID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj399++
	if yyhl399 {
		yyb399 = yyj399 > l
	} else {
		yyb399 = r.CheckBreak()
	}
	if yyb399 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.BottleID = 0
	} else {
		x.BottleID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj399++
	if yyhl399 {
		yyb399 = yyj399 > l
	} else {
		yyb399 = r.CheckBreak()
	}
	if yyb399 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Payload != nil {
			x.Payload = nil
		}
	} else {
		if x.Payload == nil {
			x.Payload = new(UpdateBottlePayload)
		}
		x.Payload.CodecDecodeSelf(d)
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj399++
	if yyhl399 {
		yyb399 = yyj399 > l
	} else {
		yyb399 = r.CheckBreak()
	}
	if yyb399 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Context = nil
	} else {
		yyv403 := &x.Context
		yym404 := z.DecBinary()
		_ = yym404
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv403) {
		} else {
			z.DecFallback(yyv403, true)
		}
	}
	if x.Context == nil {
		x.Context = new(pkg1_goa.Context)
	}
	yyj399++
	if yyhl399 {
		yyb399 = yyj399 > l
	} else {
		yyb399 = r.CheckBreak()
	}
	if yyb399 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Logger = nil
	} else {
		yyv405 := &x.Logger
		yym406 := z.DecBinary()
		_ = yym406
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv405) {
		} else {
			z.DecFallback(yyv405, true)
		}
	}
	for {
		yyj399++
		if yyhl399 {
			yyb399 = yyj399 > l
		} else {
			yyb399 = r.CheckBreak()
		}
		if yyb399 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj399-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *UpdateBottlePayload) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym407 := z.EncBinary()
		_ = yym407
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep408 := !z.EncBinary()
			yy2arr408 := z.EncBasicHandle().StructToArray
			var yyq408 [10]bool
			_, _, _ = yysep408, yyq408, yy2arr408
			const yyr408 bool = false
			yyq408[0] = x.Color != nil
			yyq408[1] = x.Country != nil
			yyq408[2] = x.Name != nil
			yyq408[3] = x.Region != nil
			yyq408[4] = x.Review != nil
			yyq408[5] = x.Sweetness != nil
			yyq408[6] = x.Varietal != nil
			yyq408[7] = x.Vineyard != nil
			yyq408[8] = x.Vintage != nil
			yyq408[9] = x.VinyardCounty != nil
			var yynn408 int
			if yyr408 || yy2arr408 {
				r.EncodeArrayStart(10)
			} else {
				yynn408 = 0
				for _, b := range yyq408 {
					if b {
						yynn408++
					}
				}
				r.EncodeMapStart(yynn408)
				yynn408 = 0
			}
			if yyr408 || yy2arr408 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq408[0] {
					if x.Color == nil {
						r.EncodeNil()
					} else {
						yy410 := *x.Color
						yym411 := z.EncBinary()
						_ = yym411
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy410))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq408[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("color"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Color == nil {
						r.EncodeNil()
					} else {
						yy412 := *x.Color
						yym413 := z.EncBinary()
						_ = yym413
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy412))
						}
					}
				}
			}
			if yyr408 || yy2arr408 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq408[1] {
					if x.Country == nil {
						r.EncodeNil()
					} else {
						yy415 := *x.Country
						yym416 := z.EncBinary()
						_ = yym416
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy415))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq408[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("country"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Country == nil {
						r.EncodeNil()
					} else {
						yy417 := *x.Country
						yym418 := z.EncBinary()
						_ = yym418
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy417))
						}
					}
				}
			}
			if yyr408 || yy2arr408 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq408[2] {
					if x.Name == nil {
						r.EncodeNil()
					} else {
						yy420 := *x.Name
						yym421 := z.EncBinary()
						_ = yym421
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy420))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq408[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("name"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Name == nil {
						r.EncodeNil()
					} else {
						yy422 := *x.Name
						yym423 := z.EncBinary()
						_ = yym423
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy422))
						}
					}
				}
			}
			if yyr408 || yy2arr408 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq408[3] {
					if x.Region == nil {
						r.EncodeNil()
					} else {
						yy425 := *x.Region
						yym426 := z.EncBinary()
						_ = yym426
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy425))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq408[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("region"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Region == nil {
						r.EncodeNil()
					} else {
						yy427 := *x.Region
						yym428 := z.EncBinary()
						_ = yym428
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy427))
						}
					}
				}
			}
			if yyr408 || yy2arr408 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq408[4] {
					if x.Review == nil {
						r.EncodeNil()
					} else {
						yy430 := *x.Review
						yym431 := z.EncBinary()
						_ = yym431
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy430))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq408[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("review"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Review == nil {
						r.EncodeNil()
					} else {
						yy432 := *x.Review
						yym433 := z.EncBinary()
						_ = yym433
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy432))
						}
					}
				}
			}
			if yyr408 || yy2arr408 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq408[5] {
					if x.Sweetness == nil {
						r.EncodeNil()
					} else {
						yy435 := *x.Sweetness
						yym436 := z.EncBinary()
						_ = yym436
						if false {
						} else {
							r.EncodeInt(int64(yy435))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq408[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("sweetness"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Sweetness == nil {
						r.EncodeNil()
					} else {
						yy437 := *x.Sweetness
						yym438 := z.EncBinary()
						_ = yym438
						if false {
						} else {
							r.EncodeInt(int64(yy437))
						}
					}
				}
			}
			if yyr408 || yy2arr408 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq408[6] {
					if x.Varietal == nil {
						r.EncodeNil()
					} else {
						yy440 := *x.Varietal
						yym441 := z.EncBinary()
						_ = yym441
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy440))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq408[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("varietal"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Varietal == nil {
						r.EncodeNil()
					} else {
						yy442 := *x.Varietal
						yym443 := z.EncBinary()
						_ = yym443
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy442))
						}
					}
				}
			}
			if yyr408 || yy2arr408 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq408[7] {
					if x.Vineyard == nil {
						r.EncodeNil()
					} else {
						yy445 := *x.Vineyard
						yym446 := z.EncBinary()
						_ = yym446
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy445))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq408[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("vineyard"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Vineyard == nil {
						r.EncodeNil()
					} else {
						yy447 := *x.Vineyard
						yym448 := z.EncBinary()
						_ = yym448
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy447))
						}
					}
				}
			}
			if yyr408 || yy2arr408 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq408[8] {
					if x.Vintage == nil {
						r.EncodeNil()
					} else {
						yy450 := *x.Vintage
						yym451 := z.EncBinary()
						_ = yym451
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy450))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq408[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("vintage"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Vintage == nil {
						r.EncodeNil()
					} else {
						yy452 := *x.Vintage
						yym453 := z.EncBinary()
						_ = yym453
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy452))
						}
					}
				}
			}
			if yyr408 || yy2arr408 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq408[9] {
					if x.VinyardCounty == nil {
						r.EncodeNil()
					} else {
						yy455 := *x.VinyardCounty
						yym456 := z.EncBinary()
						_ = yym456
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy455))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq408[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("vinyard_county"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.VinyardCounty == nil {
						r.EncodeNil()
					} else {
						yy457 := *x.VinyardCounty
						yym458 := z.EncBinary()
						_ = yym458
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy457))
						}
					}
				}
			}
			if yyr408 || yy2arr408 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *UpdateBottlePayload) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym459 := z.DecBinary()
	_ = yym459
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct460 := r.ContainerType()
		if yyct460 == codecSelferValueTypeMap212 {
			yyl460 := r.ReadMapStart()
			if yyl460 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl460, d)
			}
		} else if yyct460 == codecSelferValueTypeArray212 {
			yyl460 := r.ReadArrayStart()
			if yyl460 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl460, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *UpdateBottlePayload) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys461Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys461Slc
	var yyhl461 bool = l >= 0
	for yyj461 := 0; ; yyj461++ {
		if yyhl461 {
			if yyj461 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys461Slc = r.DecodeBytes(yys461Slc, true, true)
		yys461 := string(yys461Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys461 {
		case "color":
			if r.TryDecodeAsNil() {
				if x.Color != nil {
					x.Color = nil
				}
			} else {
				if x.Color == nil {
					x.Color = new(string)
				}
				yym463 := z.DecBinary()
				_ = yym463
				if false {
				} else {
					*((*string)(x.Color)) = r.DecodeString()
				}
			}
		case "country":
			if r.TryDecodeAsNil() {
				if x.Country != nil {
					x.Country = nil
				}
			} else {
				if x.Country == nil {
					x.Country = new(string)
				}
				yym465 := z.DecBinary()
				_ = yym465
				if false {
				} else {
					*((*string)(x.Country)) = r.DecodeString()
				}
			}
		case "name":
			if r.TryDecodeAsNil() {
				if x.Name != nil {
					x.Name = nil
				}
			} else {
				if x.Name == nil {
					x.Name = new(string)
				}
				yym467 := z.DecBinary()
				_ = yym467
				if false {
				} else {
					*((*string)(x.Name)) = r.DecodeString()
				}
			}
		case "region":
			if r.TryDecodeAsNil() {
				if x.Region != nil {
					x.Region = nil
				}
			} else {
				if x.Region == nil {
					x.Region = new(string)
				}
				yym469 := z.DecBinary()
				_ = yym469
				if false {
				} else {
					*((*string)(x.Region)) = r.DecodeString()
				}
			}
		case "review":
			if r.TryDecodeAsNil() {
				if x.Review != nil {
					x.Review = nil
				}
			} else {
				if x.Review == nil {
					x.Review = new(string)
				}
				yym471 := z.DecBinary()
				_ = yym471
				if false {
				} else {
					*((*string)(x.Review)) = r.DecodeString()
				}
			}
		case "sweetness":
			if r.TryDecodeAsNil() {
				if x.Sweetness != nil {
					x.Sweetness = nil
				}
			} else {
				if x.Sweetness == nil {
					x.Sweetness = new(int)
				}
				yym473 := z.DecBinary()
				_ = yym473
				if false {
				} else {
					*((*int)(x.Sweetness)) = int(r.DecodeInt(codecSelferBitsize212))
				}
			}
		case "varietal":
			if r.TryDecodeAsNil() {
				if x.Varietal != nil {
					x.Varietal = nil
				}
			} else {
				if x.Varietal == nil {
					x.Varietal = new(string)
				}
				yym475 := z.DecBinary()
				_ = yym475
				if false {
				} else {
					*((*string)(x.Varietal)) = r.DecodeString()
				}
			}
		case "vineyard":
			if r.TryDecodeAsNil() {
				if x.Vineyard != nil {
					x.Vineyard = nil
				}
			} else {
				if x.Vineyard == nil {
					x.Vineyard = new(string)
				}
				yym477 := z.DecBinary()
				_ = yym477
				if false {
				} else {
					*((*string)(x.Vineyard)) = r.DecodeString()
				}
			}
		case "vintage":
			if r.TryDecodeAsNil() {
				if x.Vintage != nil {
					x.Vintage = nil
				}
			} else {
				if x.Vintage == nil {
					x.Vintage = new(string)
				}
				yym479 := z.DecBinary()
				_ = yym479
				if false {
				} else {
					*((*string)(x.Vintage)) = r.DecodeString()
				}
			}
		case "vinyard_county":
			if r.TryDecodeAsNil() {
				if x.VinyardCounty != nil {
					x.VinyardCounty = nil
				}
			} else {
				if x.VinyardCounty == nil {
					x.VinyardCounty = new(string)
				}
				yym481 := z.DecBinary()
				_ = yym481
				if false {
				} else {
					*((*string)(x.VinyardCounty)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys461)
		} // end switch yys461
	} // end for yyj461
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *UpdateBottlePayload) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj482 int
	var yyb482 bool
	var yyhl482 bool = l >= 0
	yyj482++
	if yyhl482 {
		yyb482 = yyj482 > l
	} else {
		yyb482 = r.CheckBreak()
	}
	if yyb482 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Color != nil {
			x.Color = nil
		}
	} else {
		if x.Color == nil {
			x.Color = new(string)
		}
		yym484 := z.DecBinary()
		_ = yym484
		if false {
		} else {
			*((*string)(x.Color)) = r.DecodeString()
		}
	}
	yyj482++
	if yyhl482 {
		yyb482 = yyj482 > l
	} else {
		yyb482 = r.CheckBreak()
	}
	if yyb482 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Country != nil {
			x.Country = nil
		}
	} else {
		if x.Country == nil {
			x.Country = new(string)
		}
		yym486 := z.DecBinary()
		_ = yym486
		if false {
		} else {
			*((*string)(x.Country)) = r.DecodeString()
		}
	}
	yyj482++
	if yyhl482 {
		yyb482 = yyj482 > l
	} else {
		yyb482 = r.CheckBreak()
	}
	if yyb482 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Name != nil {
			x.Name = nil
		}
	} else {
		if x.Name == nil {
			x.Name = new(string)
		}
		yym488 := z.DecBinary()
		_ = yym488
		if false {
		} else {
			*((*string)(x.Name)) = r.DecodeString()
		}
	}
	yyj482++
	if yyhl482 {
		yyb482 = yyj482 > l
	} else {
		yyb482 = r.CheckBreak()
	}
	if yyb482 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Region != nil {
			x.Region = nil
		}
	} else {
		if x.Region == nil {
			x.Region = new(string)
		}
		yym490 := z.DecBinary()
		_ = yym490
		if false {
		} else {
			*((*string)(x.Region)) = r.DecodeString()
		}
	}
	yyj482++
	if yyhl482 {
		yyb482 = yyj482 > l
	} else {
		yyb482 = r.CheckBreak()
	}
	if yyb482 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Review != nil {
			x.Review = nil
		}
	} else {
		if x.Review == nil {
			x.Review = new(string)
		}
		yym492 := z.DecBinary()
		_ = yym492
		if false {
		} else {
			*((*string)(x.Review)) = r.DecodeString()
		}
	}
	yyj482++
	if yyhl482 {
		yyb482 = yyj482 > l
	} else {
		yyb482 = r.CheckBreak()
	}
	if yyb482 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Sweetness != nil {
			x.Sweetness = nil
		}
	} else {
		if x.Sweetness == nil {
			x.Sweetness = new(int)
		}
		yym494 := z.DecBinary()
		_ = yym494
		if false {
		} else {
			*((*int)(x.Sweetness)) = int(r.DecodeInt(codecSelferBitsize212))
		}
	}
	yyj482++
	if yyhl482 {
		yyb482 = yyj482 > l
	} else {
		yyb482 = r.CheckBreak()
	}
	if yyb482 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Varietal != nil {
			x.Varietal = nil
		}
	} else {
		if x.Varietal == nil {
			x.Varietal = new(string)
		}
		yym496 := z.DecBinary()
		_ = yym496
		if false {
		} else {
			*((*string)(x.Varietal)) = r.DecodeString()
		}
	}
	yyj482++
	if yyhl482 {
		yyb482 = yyj482 > l
	} else {
		yyb482 = r.CheckBreak()
	}
	if yyb482 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Vineyard != nil {
			x.Vineyard = nil
		}
	} else {
		if x.Vineyard == nil {
			x.Vineyard = new(string)
		}
		yym498 := z.DecBinary()
		_ = yym498
		if false {
		} else {
			*((*string)(x.Vineyard)) = r.DecodeString()
		}
	}
	yyj482++
	if yyhl482 {
		yyb482 = yyj482 > l
	} else {
		yyb482 = r.CheckBreak()
	}
	if yyb482 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Vintage != nil {
			x.Vintage = nil
		}
	} else {
		if x.Vintage == nil {
			x.Vintage = new(string)
		}
		yym500 := z.DecBinary()
		_ = yym500
		if false {
		} else {
			*((*string)(x.Vintage)) = r.DecodeString()
		}
	}
	yyj482++
	if yyhl482 {
		yyb482 = yyj482 > l
	} else {
		yyb482 = r.CheckBreak()
	}
	if yyb482 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.VinyardCounty != nil {
			x.VinyardCounty = nil
		}
	} else {
		if x.VinyardCounty == nil {
			x.VinyardCounty = new(string)
		}
		yym502 := z.DecBinary()
		_ = yym502
		if false {
		} else {
			*((*string)(x.VinyardCounty)) = r.DecodeString()
		}
	}
	for {
		yyj482++
		if yyhl482 {
			yyb482 = yyj482 > l
		} else {
			yyb482 = r.CheckBreak()
		}
		if yyb482 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj482-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *Account) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym503 := z.EncBinary()
		_ = yym503
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep504 := !z.EncBinary()
			yy2arr504 := z.EncBasicHandle().StructToArray
			var yyq504 [5]bool
			_, _, _ = yysep504, yyq504, yy2arr504
			const yyr504 bool = false
			yyq504[0] = x.CreatedAt != nil
			yyq504[1] = x.CreatedBy != nil
			var yynn504 int
			if yyr504 || yy2arr504 {
				r.EncodeArrayStart(5)
			} else {
				yynn504 = 3
				for _, b := range yyq504 {
					if b {
						yynn504++
					}
				}
				r.EncodeMapStart(yynn504)
				yynn504 = 0
			}
			if yyr504 || yy2arr504 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq504[0] {
					if x.CreatedAt == nil {
						r.EncodeNil()
					} else {
						yym506 := z.EncBinary()
						_ = yym506
						if false {
						} else if yym507 := z.TimeRtidIfBinc(); yym507 != 0 {
							r.EncodeBuiltin(yym507, x.CreatedAt)
						} else if z.HasExtensions() && z.EncExt(x.CreatedAt) {
						} else if yym506 {
							z.EncBinaryMarshal(x.CreatedAt)
						} else if !yym506 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CreatedAt)
						} else {
							z.EncFallback(x.CreatedAt)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq504[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("created_at"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.CreatedAt == nil {
						r.EncodeNil()
					} else {
						yym508 := z.EncBinary()
						_ = yym508
						if false {
						} else if yym509 := z.TimeRtidIfBinc(); yym509 != 0 {
							r.EncodeBuiltin(yym509, x.CreatedAt)
						} else if z.HasExtensions() && z.EncExt(x.CreatedAt) {
						} else if yym508 {
							z.EncBinaryMarshal(x.CreatedAt)
						} else if !yym508 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CreatedAt)
						} else {
							z.EncFallback(x.CreatedAt)
						}
					}
				}
			}
			if yyr504 || yy2arr504 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq504[1] {
					if x.CreatedBy == nil {
						r.EncodeNil()
					} else {
						yy511 := *x.CreatedBy
						yym512 := z.EncBinary()
						_ = yym512
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy511))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq504[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("created_by"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.CreatedBy == nil {
						r.EncodeNil()
					} else {
						yy513 := *x.CreatedBy
						yym514 := z.EncBinary()
						_ = yym514
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy513))
						}
					}
				}
			}
			if yyr504 || yy2arr504 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym516 := z.EncBinary()
				_ = yym516
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("href"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym517 := z.EncBinary()
				_ = yym517
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			}
			if yyr504 || yy2arr504 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym519 := z.EncBinary()
				_ = yym519
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("id"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym520 := z.EncBinary()
				_ = yym520
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			}
			if yyr504 || yy2arr504 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym522 := z.EncBinary()
				_ = yym522
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym523 := z.EncBinary()
				_ = yym523
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			}
			if yyr504 || yy2arr504 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *Account) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym524 := z.DecBinary()
	_ = yym524
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct525 := r.ContainerType()
		if yyct525 == codecSelferValueTypeMap212 {
			yyl525 := r.ReadMapStart()
			if yyl525 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl525, d)
			}
		} else if yyct525 == codecSelferValueTypeArray212 {
			yyl525 := r.ReadArrayStart()
			if yyl525 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl525, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *Account) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys526Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys526Slc
	var yyhl526 bool = l >= 0
	for yyj526 := 0; ; yyj526++ {
		if yyhl526 {
			if yyj526 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys526Slc = r.DecodeBytes(yys526Slc, true, true)
		yys526 := string(yys526Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys526 {
		case "created_at":
			if r.TryDecodeAsNil() {
				if x.CreatedAt != nil {
					x.CreatedAt = nil
				}
			} else {
				if x.CreatedAt == nil {
					x.CreatedAt = new(time.Time)
				}
				yym528 := z.DecBinary()
				_ = yym528
				if false {
				} else if yym529 := z.TimeRtidIfBinc(); yym529 != 0 {
					r.DecodeBuiltin(yym529, x.CreatedAt)
				} else if z.HasExtensions() && z.DecExt(x.CreatedAt) {
				} else if yym528 {
					z.DecBinaryUnmarshal(x.CreatedAt)
				} else if !yym528 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.CreatedAt)
				} else {
					z.DecFallback(x.CreatedAt, false)
				}
			}
		case "created_by":
			if r.TryDecodeAsNil() {
				if x.CreatedBy != nil {
					x.CreatedBy = nil
				}
			} else {
				if x.CreatedBy == nil {
					x.CreatedBy = new(string)
				}
				yym531 := z.DecBinary()
				_ = yym531
				if false {
				} else {
					*((*string)(x.CreatedBy)) = r.DecodeString()
				}
			}
		case "href":
			if r.TryDecodeAsNil() {
				x.Href = ""
			} else {
				x.Href = string(r.DecodeString())
			}
		case "id":
			if r.TryDecodeAsNil() {
				x.ID = 0
			} else {
				x.ID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys526)
		} // end switch yys526
	} // end for yyj526
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *Account) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj535 int
	var yyb535 bool
	var yyhl535 bool = l >= 0
	yyj535++
	if yyhl535 {
		yyb535 = yyj535 > l
	} else {
		yyb535 = r.CheckBreak()
	}
	if yyb535 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.CreatedAt != nil {
			x.CreatedAt = nil
		}
	} else {
		if x.CreatedAt == nil {
			x.CreatedAt = new(time.Time)
		}
		yym537 := z.DecBinary()
		_ = yym537
		if false {
		} else if yym538 := z.TimeRtidIfBinc(); yym538 != 0 {
			r.DecodeBuiltin(yym538, x.CreatedAt)
		} else if z.HasExtensions() && z.DecExt(x.CreatedAt) {
		} else if yym537 {
			z.DecBinaryUnmarshal(x.CreatedAt)
		} else if !yym537 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.CreatedAt)
		} else {
			z.DecFallback(x.CreatedAt, false)
		}
	}
	yyj535++
	if yyhl535 {
		yyb535 = yyj535 > l
	} else {
		yyb535 = r.CheckBreak()
	}
	if yyb535 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.CreatedBy != nil {
			x.CreatedBy = nil
		}
	} else {
		if x.CreatedBy == nil {
			x.CreatedBy = new(string)
		}
		yym540 := z.DecBinary()
		_ = yym540
		if false {
		} else {
			*((*string)(x.CreatedBy)) = r.DecodeString()
		}
	}
	yyj535++
	if yyhl535 {
		yyb535 = yyj535 > l
	} else {
		yyb535 = r.CheckBreak()
	}
	if yyb535 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Href = ""
	} else {
		x.Href = string(r.DecodeString())
	}
	yyj535++
	if yyhl535 {
		yyb535 = yyj535 > l
	} else {
		yyb535 = r.CheckBreak()
	}
	if yyb535 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.ID = 0
	} else {
		x.ID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj535++
	if yyhl535 {
		yyb535 = yyj535 > l
	} else {
		yyb535 = r.CheckBreak()
	}
	if yyb535 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	for {
		yyj535++
		if yyhl535 {
			yyb535 = yyj535 > l
		} else {
			yyb535 = r.CheckBreak()
		}
		if yyb535 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj535-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *AccountTiny) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym544 := z.EncBinary()
		_ = yym544
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep545 := !z.EncBinary()
			yy2arr545 := z.EncBasicHandle().StructToArray
			var yyq545 [3]bool
			_, _, _ = yysep545, yyq545, yy2arr545
			const yyr545 bool = false
			var yynn545 int
			if yyr545 || yy2arr545 {
				r.EncodeArrayStart(3)
			} else {
				yynn545 = 3
				for _, b := range yyq545 {
					if b {
						yynn545++
					}
				}
				r.EncodeMapStart(yynn545)
				yynn545 = 0
			}
			if yyr545 || yy2arr545 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym547 := z.EncBinary()
				_ = yym547
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("href"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym548 := z.EncBinary()
				_ = yym548
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			}
			if yyr545 || yy2arr545 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym550 := z.EncBinary()
				_ = yym550
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("id"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym551 := z.EncBinary()
				_ = yym551
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			}
			if yyr545 || yy2arr545 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym553 := z.EncBinary()
				_ = yym553
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym554 := z.EncBinary()
				_ = yym554
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			}
			if yyr545 || yy2arr545 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *AccountTiny) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym555 := z.DecBinary()
	_ = yym555
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct556 := r.ContainerType()
		if yyct556 == codecSelferValueTypeMap212 {
			yyl556 := r.ReadMapStart()
			if yyl556 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl556, d)
			}
		} else if yyct556 == codecSelferValueTypeArray212 {
			yyl556 := r.ReadArrayStart()
			if yyl556 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl556, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *AccountTiny) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys557Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys557Slc
	var yyhl557 bool = l >= 0
	for yyj557 := 0; ; yyj557++ {
		if yyhl557 {
			if yyj557 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys557Slc = r.DecodeBytes(yys557Slc, true, true)
		yys557 := string(yys557Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys557 {
		case "href":
			if r.TryDecodeAsNil() {
				x.Href = ""
			} else {
				x.Href = string(r.DecodeString())
			}
		case "id":
			if r.TryDecodeAsNil() {
				x.ID = 0
			} else {
				x.ID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys557)
		} // end switch yys557
	} // end for yyj557
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *AccountTiny) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj561 int
	var yyb561 bool
	var yyhl561 bool = l >= 0
	yyj561++
	if yyhl561 {
		yyb561 = yyj561 > l
	} else {
		yyb561 = r.CheckBreak()
	}
	if yyb561 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Href = ""
	} else {
		x.Href = string(r.DecodeString())
	}
	yyj561++
	if yyhl561 {
		yyb561 = yyj561 > l
	} else {
		yyb561 = r.CheckBreak()
	}
	if yyb561 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.ID = 0
	} else {
		x.ID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj561++
	if yyhl561 {
		yyb561 = yyj561 > l
	} else {
		yyb561 = r.CheckBreak()
	}
	if yyb561 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	for {
		yyj561++
		if yyhl561 {
			yyb561 = yyj561 > l
		} else {
			yyb561 = r.CheckBreak()
		}
		if yyb561 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj561-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *AccountLink) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym565 := z.EncBinary()
		_ = yym565
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep566 := !z.EncBinary()
			yy2arr566 := z.EncBasicHandle().StructToArray
			var yyq566 [2]bool
			_, _, _ = yysep566, yyq566, yy2arr566
			const yyr566 bool = false
			var yynn566 int
			if yyr566 || yy2arr566 {
				r.EncodeArrayStart(2)
			} else {
				yynn566 = 2
				for _, b := range yyq566 {
					if b {
						yynn566++
					}
				}
				r.EncodeMapStart(yynn566)
				yynn566 = 0
			}
			if yyr566 || yy2arr566 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym568 := z.EncBinary()
				_ = yym568
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("href"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym569 := z.EncBinary()
				_ = yym569
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			}
			if yyr566 || yy2arr566 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym571 := z.EncBinary()
				_ = yym571
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("id"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym572 := z.EncBinary()
				_ = yym572
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			}
			if yyr566 || yy2arr566 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *AccountLink) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym573 := z.DecBinary()
	_ = yym573
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct574 := r.ContainerType()
		if yyct574 == codecSelferValueTypeMap212 {
			yyl574 := r.ReadMapStart()
			if yyl574 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl574, d)
			}
		} else if yyct574 == codecSelferValueTypeArray212 {
			yyl574 := r.ReadArrayStart()
			if yyl574 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl574, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *AccountLink) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys575Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys575Slc
	var yyhl575 bool = l >= 0
	for yyj575 := 0; ; yyj575++ {
		if yyhl575 {
			if yyj575 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys575Slc = r.DecodeBytes(yys575Slc, true, true)
		yys575 := string(yys575Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys575 {
		case "href":
			if r.TryDecodeAsNil() {
				x.Href = ""
			} else {
				x.Href = string(r.DecodeString())
			}
		case "id":
			if r.TryDecodeAsNil() {
				x.ID = 0
			} else {
				x.ID = int(r.DecodeInt(codecSelferBitsize212))
			}
		default:
			z.DecStructFieldNotFound(-1, yys575)
		} // end switch yys575
	} // end for yyj575
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *AccountLink) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj578 int
	var yyb578 bool
	var yyhl578 bool = l >= 0
	yyj578++
	if yyhl578 {
		yyb578 = yyj578 > l
	} else {
		yyb578 = r.CheckBreak()
	}
	if yyb578 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Href = ""
	} else {
		x.Href = string(r.DecodeString())
	}
	yyj578++
	if yyhl578 {
		yyb578 = yyj578 > l
	} else {
		yyb578 = r.CheckBreak()
	}
	if yyb578 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.ID = 0
	} else {
		x.ID = int(r.DecodeInt(codecSelferBitsize212))
	}
	for {
		yyj578++
		if yyhl578 {
			yyb578 = yyj578 > l
		} else {
			yyb578 = r.CheckBreak()
		}
		if yyb578 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj578-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *Bottle) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym581 := z.EncBinary()
		_ = yym581
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep582 := !z.EncBinary()
			yy2arr582 := z.EncBasicHandle().StructToArray
			var yyq582 [9]bool
			_, _, _ = yysep582, yyq582, yy2arr582
			const yyr582 bool = false
			yyq582[0] = x.Account != nil
			yyq582[3] = x.Links != nil
			yyq582[5] = x.Rating != nil
			var yynn582 int
			if yyr582 || yy2arr582 {
				r.EncodeArrayStart(9)
			} else {
				yynn582 = 6
				for _, b := range yyq582 {
					if b {
						yynn582++
					}
				}
				r.EncodeMapStart(yynn582)
				yynn582 = 0
			}
			if yyr582 || yy2arr582 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq582[0] {
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq582[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("account"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				}
			}
			if yyr582 || yy2arr582 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym587 := z.EncBinary()
				_ = yym587
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("href"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym588 := z.EncBinary()
				_ = yym588
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			}
			if yyr582 || yy2arr582 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym590 := z.EncBinary()
				_ = yym590
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("id"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym591 := z.EncBinary()
				_ = yym591
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			}
			if yyr582 || yy2arr582 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq582[3] {
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq582[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("links"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				}
			}
			if yyr582 || yy2arr582 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym596 := z.EncBinary()
				_ = yym596
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym597 := z.EncBinary()
				_ = yym597
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			}
			if yyr582 || yy2arr582 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq582[5] {
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy599 := *x.Rating
						yym600 := z.EncBinary()
						_ = yym600
						if false {
						} else {
							r.EncodeInt(int64(yy599))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq582[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("rating"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy601 := *x.Rating
						yym602 := z.EncBinary()
						_ = yym602
						if false {
						} else {
							r.EncodeInt(int64(yy601))
						}
					}
				}
			}
			if yyr582 || yy2arr582 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym604 := z.EncBinary()
				_ = yym604
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Varietal))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("varietal"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym605 := z.EncBinary()
				_ = yym605
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Varietal))
				}
			}
			if yyr582 || yy2arr582 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym607 := z.EncBinary()
				_ = yym607
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vineyard))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("vineyard"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym608 := z.EncBinary()
				_ = yym608
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vineyard))
				}
			}
			if yyr582 || yy2arr582 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym610 := z.EncBinary()
				_ = yym610
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vintage))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("vintage"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym611 := z.EncBinary()
				_ = yym611
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vintage))
				}
			}
			if yyr582 || yy2arr582 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *Bottle) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym612 := z.DecBinary()
	_ = yym612
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct613 := r.ContainerType()
		if yyct613 == codecSelferValueTypeMap212 {
			yyl613 := r.ReadMapStart()
			if yyl613 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl613, d)
			}
		} else if yyct613 == codecSelferValueTypeArray212 {
			yyl613 := r.ReadArrayStart()
			if yyl613 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl613, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *Bottle) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys614Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys614Slc
	var yyhl614 bool = l >= 0
	for yyj614 := 0; ; yyj614++ {
		if yyhl614 {
			if yyj614 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys614Slc = r.DecodeBytes(yys614Slc, true, true)
		yys614 := string(yys614Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys614 {
		case "account":
			if r.TryDecodeAsNil() {
				if x.Account != nil {
					x.Account = nil
				}
			} else {
				if x.Account == nil {
					x.Account = new(Account)
				}
				x.Account.CodecDecodeSelf(d)
			}
		case "href":
			if r.TryDecodeAsNil() {
				x.Href = ""
			} else {
				x.Href = string(r.DecodeString())
			}
		case "id":
			if r.TryDecodeAsNil() {
				x.ID = 0
			} else {
				x.ID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "links":
			if r.TryDecodeAsNil() {
				if x.Links != nil {
					x.Links = nil
				}
			} else {
				if x.Links == nil {
					x.Links = new(BottleLinks)
				}
				x.Links.CodecDecodeSelf(d)
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "rating":
			if r.TryDecodeAsNil() {
				if x.Rating != nil {
					x.Rating = nil
				}
			} else {
				if x.Rating == nil {
					x.Rating = new(int)
				}
				yym621 := z.DecBinary()
				_ = yym621
				if false {
				} else {
					*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
				}
			}
		case "varietal":
			if r.TryDecodeAsNil() {
				x.Varietal = ""
			} else {
				x.Varietal = string(r.DecodeString())
			}
		case "vineyard":
			if r.TryDecodeAsNil() {
				x.Vineyard = ""
			} else {
				x.Vineyard = string(r.DecodeString())
			}
		case "vintage":
			if r.TryDecodeAsNil() {
				x.Vintage = ""
			} else {
				x.Vintage = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys614)
		} // end switch yys614
	} // end for yyj614
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *Bottle) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj625 int
	var yyb625 bool
	var yyhl625 bool = l >= 0
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Account != nil {
			x.Account = nil
		}
	} else {
		if x.Account == nil {
			x.Account = new(Account)
		}
		x.Account.CodecDecodeSelf(d)
	}
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Href = ""
	} else {
		x.Href = string(r.DecodeString())
	}
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.ID = 0
	} else {
		x.ID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Links != nil {
			x.Links = nil
		}
	} else {
		if x.Links == nil {
			x.Links = new(BottleLinks)
		}
		x.Links.CodecDecodeSelf(d)
	}
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Rating != nil {
			x.Rating = nil
		}
	} else {
		if x.Rating == nil {
			x.Rating = new(int)
		}
		yym632 := z.DecBinary()
		_ = yym632
		if false {
		} else {
			*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
		}
	}
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Varietal = ""
	} else {
		x.Varietal = string(r.DecodeString())
	}
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Vineyard = ""
	} else {
		x.Vineyard = string(r.DecodeString())
	}
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Vintage = ""
	} else {
		x.Vintage = string(r.DecodeString())
	}
	for {
		yyj625++
		if yyhl625 {
			yyb625 = yyj625 > l
		} else {
			yyb625 = r.CheckBreak()
		}
		if yyb625 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj625-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *BottleTiny) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym636 := z.EncBinary()
		_ = yym636
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep637 := !z.EncBinary()
			yy2arr637 := z.EncBasicHandle().StructToArray
			var yyq637 [5]bool
			_, _, _ = yysep637, yyq637, yy2arr637
			const yyr637 bool = false
			yyq637[2] = x.Links != nil
			yyq637[4] = x.Rating != nil
			var yynn637 int
			if yyr637 || yy2arr637 {
				r.EncodeArrayStart(5)
			} else {
				yynn637 = 3
				for _, b := range yyq637 {
					if b {
						yynn637++
					}
				}
				r.EncodeMapStart(yynn637)
				yynn637 = 0
			}
			if yyr637 || yy2arr637 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym639 := z.EncBinary()
				_ = yym639
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("href"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym640 := z.EncBinary()
				_ = yym640
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			}
			if yyr637 || yy2arr637 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym642 := z.EncBinary()
				_ = yym642
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("id"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym643 := z.EncBinary()
				_ = yym643
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			}
			if yyr637 || yy2arr637 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq637[2] {
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq637[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("links"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				}
			}
			if yyr637 || yy2arr637 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym648 := z.EncBinary()
				_ = yym648
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym649 := z.EncBinary()
				_ = yym649
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			}
			if yyr637 || yy2arr637 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq637[4] {
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy651 := *x.Rating
						yym652 := z.EncBinary()
						_ = yym652
						if false {
						} else {
							r.EncodeInt(int64(yy651))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq637[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("rating"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy653 := *x.Rating
						yym654 := z.EncBinary()
						_ = yym654
						if false {
						} else {
							r.EncodeInt(int64(yy653))
						}
					}
				}
			}
			if yyr637 || yy2arr637 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *BottleTiny) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym655 := z.DecBinary()
	_ = yym655
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct656 := r.ContainerType()
		if yyct656 == codecSelferValueTypeMap212 {
			yyl656 := r.ReadMapStart()
			if yyl656 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl656, d)
			}
		} else if yyct656 == codecSelferValueTypeArray212 {
			yyl656 := r.ReadArrayStart()
			if yyl656 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl656, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *BottleTiny) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys657Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys657Slc
	var yyhl657 bool = l >= 0
	for yyj657 := 0; ; yyj657++ {
		if yyhl657 {
			if yyj657 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys657Slc = r.DecodeBytes(yys657Slc, true, true)
		yys657 := string(yys657Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys657 {
		case "href":
			if r.TryDecodeAsNil() {
				x.Href = ""
			} else {
				x.Href = string(r.DecodeString())
			}
		case "id":
			if r.TryDecodeAsNil() {
				x.ID = 0
			} else {
				x.ID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "links":
			if r.TryDecodeAsNil() {
				if x.Links != nil {
					x.Links = nil
				}
			} else {
				if x.Links == nil {
					x.Links = new(BottleLinks)
				}
				x.Links.CodecDecodeSelf(d)
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "rating":
			if r.TryDecodeAsNil() {
				if x.Rating != nil {
					x.Rating = nil
				}
			} else {
				if x.Rating == nil {
					x.Rating = new(int)
				}
				yym663 := z.DecBinary()
				_ = yym663
				if false {
				} else {
					*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys657)
		} // end switch yys657
	} // end for yyj657
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *BottleTiny) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj664 int
	var yyb664 bool
	var yyhl664 bool = l >= 0
	yyj664++
	if yyhl664 {
		yyb664 = yyj664 > l
	} else {
		yyb664 = r.CheckBreak()
	}
	if yyb664 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Href = ""
	} else {
		x.Href = string(r.DecodeString())
	}
	yyj664++
	if yyhl664 {
		yyb664 = yyj664 > l
	} else {
		yyb664 = r.CheckBreak()
	}
	if yyb664 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.ID = 0
	} else {
		x.ID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj664++
	if yyhl664 {
		yyb664 = yyj664 > l
	} else {
		yyb664 = r.CheckBreak()
	}
	if yyb664 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Links != nil {
			x.Links = nil
		}
	} else {
		if x.Links == nil {
			x.Links = new(BottleLinks)
		}
		x.Links.CodecDecodeSelf(d)
	}
	yyj664++
	if yyhl664 {
		yyb664 = yyj664 > l
	} else {
		yyb664 = r.CheckBreak()
	}
	if yyb664 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj664++
	if yyhl664 {
		yyb664 = yyj664 > l
	} else {
		yyb664 = r.CheckBreak()
	}
	if yyb664 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Rating != nil {
			x.Rating = nil
		}
	} else {
		if x.Rating == nil {
			x.Rating = new(int)
		}
		yym670 := z.DecBinary()
		_ = yym670
		if false {
		} else {
			*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
		}
	}
	for {
		yyj664++
		if yyhl664 {
			yyb664 = yyj664 > l
		} else {
			yyb664 = r.CheckBreak()
		}
		if yyb664 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj664-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *BottleFull) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym671 := z.EncBinary()
		_ = yym671
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep672 := !z.EncBinary()
			yy2arr672 := z.EncBasicHandle().StructToArray
			var yyq672 [17]bool
			_, _, _ = yysep672, yyq672, yy2arr672
			const yyr672 bool = false
			yyq672[0] = x.Account != nil
			yyq672[2] = x.Country != nil
			yyq672[3] = x.CreatedAt != nil
			yyq672[6] = x.Links != nil
			yyq672[8] = x.Rating != nil
			yyq672[9] = x.Region != nil
			yyq672[10] = x.Review != nil
			yyq672[11] = x.Sweetness != nil
			yyq672[12] = x.UpdatedAt != nil
			yyq672[16] = x.VinyardCounty != nil
			var yynn672 int
			if yyr672 || yy2arr672 {
				r.EncodeArrayStart(17)
			} else {
				yynn672 = 7
				for _, b := range yyq672 {
					if b {
						yynn672++
					}
				}
				r.EncodeMapStart(yynn672)
				yynn672 = 0
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq672[0] {
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq672[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("account"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym677 := z.EncBinary()
				_ = yym677
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Color))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("color"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym678 := z.EncBinary()
				_ = yym678
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Color))
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq672[2] {
					if x.Country == nil {
						r.EncodeNil()
					} else {
						yy680 := *x.Country
						yym681 := z.EncBinary()
						_ = yym681
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy680))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq672[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("country"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Country == nil {
						r.EncodeNil()
					} else {
						yy682 := *x.Country
						yym683 := z.EncBinary()
						_ = yym683
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy682))
						}
					}
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq672[3] {
					if x.CreatedAt == nil {
						r.EncodeNil()
					} else {
						yym685 := z.EncBinary()
						_ = yym685
						if false {
						} else if yym686 := z.TimeRtidIfBinc(); yym686 != 0 {
							r.EncodeBuiltin(yym686, x.CreatedAt)
						} else if z.HasExtensions() && z.EncExt(x.CreatedAt) {
						} else if yym685 {
							z.EncBinaryMarshal(x.CreatedAt)
						} else if !yym685 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CreatedAt)
						} else {
							z.EncFallback(x.CreatedAt)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq672[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("created_at"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.CreatedAt == nil {
						r.EncodeNil()
					} else {
						yym687 := z.EncBinary()
						_ = yym687
						if false {
						} else if yym688 := z.TimeRtidIfBinc(); yym688 != 0 {
							r.EncodeBuiltin(yym688, x.CreatedAt)
						} else if z.HasExtensions() && z.EncExt(x.CreatedAt) {
						} else if yym687 {
							z.EncBinaryMarshal(x.CreatedAt)
						} else if !yym687 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CreatedAt)
						} else {
							z.EncFallback(x.CreatedAt)
						}
					}
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym690 := z.EncBinary()
				_ = yym690
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("href"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym691 := z.EncBinary()
				_ = yym691
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym693 := z.EncBinary()
				_ = yym693
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("id"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym694 := z.EncBinary()
				_ = yym694
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq672[6] {
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq672[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("links"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym699 := z.EncBinary()
				_ = yym699
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym700 := z.EncBinary()
				_ = yym700
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq672[8] {
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy702 := *x.Rating
						yym703 := z.EncBinary()
						_ = yym703
						if false {
						} else {
							r.EncodeInt(int64(yy702))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq672[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("rating"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy704 := *x.Rating
						yym705 := z.EncBinary()
						_ = yym705
						if false {
						} else {
							r.EncodeInt(int64(yy704))
						}
					}
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq672[9] {
					if x.Region == nil {
						r.EncodeNil()
					} else {
						yy707 := *x.Region
						yym708 := z.EncBinary()
						_ = yym708
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy707))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq672[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("region"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Region == nil {
						r.EncodeNil()
					} else {
						yy709 := *x.Region
						yym710 := z.EncBinary()
						_ = yym710
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy709))
						}
					}
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq672[10] {
					if x.Review == nil {
						r.EncodeNil()
					} else {
						yy712 := *x.Review
						yym713 := z.EncBinary()
						_ = yym713
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy712))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq672[10] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("review"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Review == nil {
						r.EncodeNil()
					} else {
						yy714 := *x.Review
						yym715 := z.EncBinary()
						_ = yym715
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy714))
						}
					}
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq672[11] {
					if x.Sweetness == nil {
						r.EncodeNil()
					} else {
						yy717 := *x.Sweetness
						yym718 := z.EncBinary()
						_ = yym718
						if false {
						} else {
							r.EncodeInt(int64(yy717))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq672[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("sweetness"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Sweetness == nil {
						r.EncodeNil()
					} else {
						yy719 := *x.Sweetness
						yym720 := z.EncBinary()
						_ = yym720
						if false {
						} else {
							r.EncodeInt(int64(yy719))
						}
					}
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq672[12] {
					if x.UpdatedAt == nil {
						r.EncodeNil()
					} else {
						yym722 := z.EncBinary()
						_ = yym722
						if false {
						} else if yym723 := z.TimeRtidIfBinc(); yym723 != 0 {
							r.EncodeBuiltin(yym723, x.UpdatedAt)
						} else if z.HasExtensions() && z.EncExt(x.UpdatedAt) {
						} else if yym722 {
							z.EncBinaryMarshal(x.UpdatedAt)
						} else if !yym722 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.UpdatedAt)
						} else {
							z.EncFallback(x.UpdatedAt)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq672[12] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("updated_at"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.UpdatedAt == nil {
						r.EncodeNil()
					} else {
						yym724 := z.EncBinary()
						_ = yym724
						if false {
						} else if yym725 := z.TimeRtidIfBinc(); yym725 != 0 {
							r.EncodeBuiltin(yym725, x.UpdatedAt)
						} else if z.HasExtensions() && z.EncExt(x.UpdatedAt) {
						} else if yym724 {
							z.EncBinaryMarshal(x.UpdatedAt)
						} else if !yym724 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.UpdatedAt)
						} else {
							z.EncFallback(x.UpdatedAt)
						}
					}
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym727 := z.EncBinary()
				_ = yym727
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Varietal))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("varietal"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym728 := z.EncBinary()
				_ = yym728
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Varietal))
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym730 := z.EncBinary()
				_ = yym730
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vineyard))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("vineyard"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym731 := z.EncBinary()
				_ = yym731
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vineyard))
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym733 := z.EncBinary()
				_ = yym733
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vintage))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("vintage"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym734 := z.EncBinary()
				_ = yym734
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vintage))
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq672[16] {
					if x.VinyardCounty == nil {
						r.EncodeNil()
					} else {
						yy736 := *x.VinyardCounty
						yym737 := z.EncBinary()
						_ = yym737
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy736))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq672[16] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("vinyard_county"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.VinyardCounty == nil {
						r.EncodeNil()
					} else {
						yy738 := *x.VinyardCounty
						yym739 := z.EncBinary()
						_ = yym739
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy738))
						}
					}
				}
			}
			if yyr672 || yy2arr672 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *BottleFull) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym740 := z.DecBinary()
	_ = yym740
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct741 := r.ContainerType()
		if yyct741 == codecSelferValueTypeMap212 {
			yyl741 := r.ReadMapStart()
			if yyl741 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl741, d)
			}
		} else if yyct741 == codecSelferValueTypeArray212 {
			yyl741 := r.ReadArrayStart()
			if yyl741 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl741, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *BottleFull) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys742Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys742Slc
	var yyhl742 bool = l >= 0
	for yyj742 := 0; ; yyj742++ {
		if yyhl742 {
			if yyj742 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys742Slc = r.DecodeBytes(yys742Slc, true, true)
		yys742 := string(yys742Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys742 {
		case "account":
			if r.TryDecodeAsNil() {
				if x.Account != nil {
					x.Account = nil
				}
			} else {
				if x.Account == nil {
					x.Account = new(Account)
				}
				x.Account.CodecDecodeSelf(d)
			}
		case "color":
			if r.TryDecodeAsNil() {
				x.Color = ""
			} else {
				x.Color = string(r.DecodeString())
			}
		case "country":
			if r.TryDecodeAsNil() {
				if x.Country != nil {
					x.Country = nil
				}
			} else {
				if x.Country == nil {
					x.Country = new(string)
				}
				yym746 := z.DecBinary()
				_ = yym746
				if false {
				} else {
					*((*string)(x.Country)) = r.DecodeString()
				}
			}
		case "created_at":
			if r.TryDecodeAsNil() {
				if x.CreatedAt != nil {
					x.CreatedAt = nil
				}
			} else {
				if x.CreatedAt == nil {
					x.CreatedAt = new(time.Time)
				}
				yym748 := z.DecBinary()
				_ = yym748
				if false {
				} else if yym749 := z.TimeRtidIfBinc(); yym749 != 0 {
					r.DecodeBuiltin(yym749, x.CreatedAt)
				} else if z.HasExtensions() && z.DecExt(x.CreatedAt) {
				} else if yym748 {
					z.DecBinaryUnmarshal(x.CreatedAt)
				} else if !yym748 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.CreatedAt)
				} else {
					z.DecFallback(x.CreatedAt, false)
				}
			}
		case "href":
			if r.TryDecodeAsNil() {
				x.Href = ""
			} else {
				x.Href = string(r.DecodeString())
			}
		case "id":
			if r.TryDecodeAsNil() {
				x.ID = 0
			} else {
				x.ID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "links":
			if r.TryDecodeAsNil() {
				if x.Links != nil {
					x.Links = nil
				}
			} else {
				if x.Links == nil {
					x.Links = new(BottleLinks)
				}
				x.Links.CodecDecodeSelf(d)
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "rating":
			if r.TryDecodeAsNil() {
				if x.Rating != nil {
					x.Rating = nil
				}
			} else {
				if x.Rating == nil {
					x.Rating = new(int)
				}
				yym755 := z.DecBinary()
				_ = yym755
				if false {
				} else {
					*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
				}
			}
		case "region":
			if r.TryDecodeAsNil() {
				if x.Region != nil {
					x.Region = nil
				}
			} else {
				if x.Region == nil {
					x.Region = new(string)
				}
				yym757 := z.DecBinary()
				_ = yym757
				if false {
				} else {
					*((*string)(x.Region)) = r.DecodeString()
				}
			}
		case "review":
			if r.TryDecodeAsNil() {
				if x.Review != nil {
					x.Review = nil
				}
			} else {
				if x.Review == nil {
					x.Review = new(string)
				}
				yym759 := z.DecBinary()
				_ = yym759
				if false {
				} else {
					*((*string)(x.Review)) = r.DecodeString()
				}
			}
		case "sweetness":
			if r.TryDecodeAsNil() {
				if x.Sweetness != nil {
					x.Sweetness = nil
				}
			} else {
				if x.Sweetness == nil {
					x.Sweetness = new(int)
				}
				yym761 := z.DecBinary()
				_ = yym761
				if false {
				} else {
					*((*int)(x.Sweetness)) = int(r.DecodeInt(codecSelferBitsize212))
				}
			}
		case "updated_at":
			if r.TryDecodeAsNil() {
				if x.UpdatedAt != nil {
					x.UpdatedAt = nil
				}
			} else {
				if x.UpdatedAt == nil {
					x.UpdatedAt = new(time.Time)
				}
				yym763 := z.DecBinary()
				_ = yym763
				if false {
				} else if yym764 := z.TimeRtidIfBinc(); yym764 != 0 {
					r.DecodeBuiltin(yym764, x.UpdatedAt)
				} else if z.HasExtensions() && z.DecExt(x.UpdatedAt) {
				} else if yym763 {
					z.DecBinaryUnmarshal(x.UpdatedAt)
				} else if !yym763 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.UpdatedAt)
				} else {
					z.DecFallback(x.UpdatedAt, false)
				}
			}
		case "varietal":
			if r.TryDecodeAsNil() {
				x.Varietal = ""
			} else {
				x.Varietal = string(r.DecodeString())
			}
		case "vineyard":
			if r.TryDecodeAsNil() {
				x.Vineyard = ""
			} else {
				x.Vineyard = string(r.DecodeString())
			}
		case "vintage":
			if r.TryDecodeAsNil() {
				x.Vintage = ""
			} else {
				x.Vintage = string(r.DecodeString())
			}
		case "vinyard_county":
			if r.TryDecodeAsNil() {
				if x.VinyardCounty != nil {
					x.VinyardCounty = nil
				}
			} else {
				if x.VinyardCounty == nil {
					x.VinyardCounty = new(string)
				}
				yym769 := z.DecBinary()
				_ = yym769
				if false {
				} else {
					*((*string)(x.VinyardCounty)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys742)
		} // end switch yys742
	} // end for yyj742
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *BottleFull) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj770 int
	var yyb770 bool
	var yyhl770 bool = l >= 0
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Account != nil {
			x.Account = nil
		}
	} else {
		if x.Account == nil {
			x.Account = new(Account)
		}
		x.Account.CodecDecodeSelf(d)
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Color = ""
	} else {
		x.Color = string(r.DecodeString())
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Country != nil {
			x.Country = nil
		}
	} else {
		if x.Country == nil {
			x.Country = new(string)
		}
		yym774 := z.DecBinary()
		_ = yym774
		if false {
		} else {
			*((*string)(x.Country)) = r.DecodeString()
		}
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.CreatedAt != nil {
			x.CreatedAt = nil
		}
	} else {
		if x.CreatedAt == nil {
			x.CreatedAt = new(time.Time)
		}
		yym776 := z.DecBinary()
		_ = yym776
		if false {
		} else if yym777 := z.TimeRtidIfBinc(); yym777 != 0 {
			r.DecodeBuiltin(yym777, x.CreatedAt)
		} else if z.HasExtensions() && z.DecExt(x.CreatedAt) {
		} else if yym776 {
			z.DecBinaryUnmarshal(x.CreatedAt)
		} else if !yym776 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.CreatedAt)
		} else {
			z.DecFallback(x.CreatedAt, false)
		}
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Href = ""
	} else {
		x.Href = string(r.DecodeString())
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.ID = 0
	} else {
		x.ID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Links != nil {
			x.Links = nil
		}
	} else {
		if x.Links == nil {
			x.Links = new(BottleLinks)
		}
		x.Links.CodecDecodeSelf(d)
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Rating != nil {
			x.Rating = nil
		}
	} else {
		if x.Rating == nil {
			x.Rating = new(int)
		}
		yym783 := z.DecBinary()
		_ = yym783
		if false {
		} else {
			*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
		}
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Region != nil {
			x.Region = nil
		}
	} else {
		if x.Region == nil {
			x.Region = new(string)
		}
		yym785 := z.DecBinary()
		_ = yym785
		if false {
		} else {
			*((*string)(x.Region)) = r.DecodeString()
		}
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Review != nil {
			x.Review = nil
		}
	} else {
		if x.Review == nil {
			x.Review = new(string)
		}
		yym787 := z.DecBinary()
		_ = yym787
		if false {
		} else {
			*((*string)(x.Review)) = r.DecodeString()
		}
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Sweetness != nil {
			x.Sweetness = nil
		}
	} else {
		if x.Sweetness == nil {
			x.Sweetness = new(int)
		}
		yym789 := z.DecBinary()
		_ = yym789
		if false {
		} else {
			*((*int)(x.Sweetness)) = int(r.DecodeInt(codecSelferBitsize212))
		}
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.UpdatedAt != nil {
			x.UpdatedAt = nil
		}
	} else {
		if x.UpdatedAt == nil {
			x.UpdatedAt = new(time.Time)
		}
		yym791 := z.DecBinary()
		_ = yym791
		if false {
		} else if yym792 := z.TimeRtidIfBinc(); yym792 != 0 {
			r.DecodeBuiltin(yym792, x.UpdatedAt)
		} else if z.HasExtensions() && z.DecExt(x.UpdatedAt) {
		} else if yym791 {
			z.DecBinaryUnmarshal(x.UpdatedAt)
		} else if !yym791 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.UpdatedAt)
		} else {
			z.DecFallback(x.UpdatedAt, false)
		}
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Varietal = ""
	} else {
		x.Varietal = string(r.DecodeString())
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Vineyard = ""
	} else {
		x.Vineyard = string(r.DecodeString())
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Vintage = ""
	} else {
		x.Vintage = string(r.DecodeString())
	}
	yyj770++
	if yyhl770 {
		yyb770 = yyj770 > l
	} else {
		yyb770 = r.CheckBreak()
	}
	if yyb770 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.VinyardCounty != nil {
			x.VinyardCounty = nil
		}
	} else {
		if x.VinyardCounty == nil {
			x.VinyardCounty = new(string)
		}
		yym797 := z.DecBinary()
		_ = yym797
		if false {
		} else {
			*((*string)(x.VinyardCounty)) = r.DecodeString()
		}
	}
	for {
		yyj770++
		if yyhl770 {
			yyb770 = yyj770 > l
		} else {
			yyb770 = r.CheckBreak()
		}
		if yyb770 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj770-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *BottleLinks) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym798 := z.EncBinary()
		_ = yym798
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep799 := !z.EncBinary()
			yy2arr799 := z.EncBasicHandle().StructToArray
			var yyq799 [1]bool
			_, _, _ = yysep799, yyq799, yy2arr799
			const yyr799 bool = false
			yyq799[0] = x.Account != nil
			var yynn799 int
			if yyr799 || yy2arr799 {
				r.EncodeArrayStart(1)
			} else {
				yynn799 = 0
				for _, b := range yyq799 {
					if b {
						yynn799++
					}
				}
				r.EncodeMapStart(yynn799)
				yynn799 = 0
			}
			if yyr799 || yy2arr799 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq799[0] {
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq799[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("account"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				}
			}
			if yyr799 || yy2arr799 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *BottleLinks) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym803 := z.DecBinary()
	_ = yym803
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct804 := r.ContainerType()
		if yyct804 == codecSelferValueTypeMap212 {
			yyl804 := r.ReadMapStart()
			if yyl804 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl804, d)
			}
		} else if yyct804 == codecSelferValueTypeArray212 {
			yyl804 := r.ReadArrayStart()
			if yyl804 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl804, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *BottleLinks) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys805Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys805Slc
	var yyhl805 bool = l >= 0
	for yyj805 := 0; ; yyj805++ {
		if yyhl805 {
			if yyj805 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys805Slc = r.DecodeBytes(yys805Slc, true, true)
		yys805 := string(yys805Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys805 {
		case "account":
			if r.TryDecodeAsNil() {
				if x.Account != nil {
					x.Account = nil
				}
			} else {
				if x.Account == nil {
					x.Account = new(AccountLink)
				}
				x.Account.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys805)
		} // end switch yys805
	} // end for yyj805
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *BottleLinks) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj807 int
	var yyb807 bool
	var yyhl807 bool = l >= 0
	yyj807++
	if yyhl807 {
		yyb807 = yyj807 > l
	} else {
		yyb807 = r.CheckBreak()
	}
	if yyb807 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Account != nil {
			x.Account = nil
		}
	} else {
		if x.Account == nil {
			x.Account = new(AccountLink)
		}
		x.Account.CodecDecodeSelf(d)
	}
	for {
		yyj807++
		if yyhl807 {
			yyb807 = yyj807 > l
		} else {
			yyb807 = r.CheckBreak()
		}
		if yyb807 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj807-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x BottleCollection) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym809 := z.EncBinary()
		_ = yym809
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			h.encBottleCollection((BottleCollection)(x), e)
		}
	}
}

func (x *BottleCollection) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym810 := z.DecBinary()
	_ = yym810
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		h.decBottleCollection((*BottleCollection)(x), d)
	}
}

func (x BottleTinyCollection) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym811 := z.EncBinary()
		_ = yym811
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			h.encBottleTinyCollection((BottleTinyCollection)(x), e)
		}
	}
}

func (x *BottleTinyCollection) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym812 := z.DecBinary()
	_ = yym812
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		h.decBottleTinyCollection((*BottleTinyCollection)(x), d)
	}
}

func (x BottleLinksArray) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym813 := z.EncBinary()
		_ = yym813
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			h.encBottleLinksArray((BottleLinksArray)(x), e)
		}
	}
}

func (x *BottleLinksArray) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym814 := z.DecBinary()
	_ = yym814
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		h.decBottleLinksArray((*BottleLinksArray)(x), d)
	}
}

func (x *Box) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym815 := z.EncBinary()
		_ = yym815
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep816 := !z.EncBinary()
			yy2arr816 := z.EncBasicHandle().StructToArray
			var yyq816 [9]bool
			_, _, _ = yysep816, yyq816, yy2arr816
			const yyr816 bool = false
			yyq816[0] = x.Account != nil
			yyq816[3] = x.Links != nil
			yyq816[5] = x.Rating != nil
			var yynn816 int
			if yyr816 || yy2arr816 {
				r.EncodeArrayStart(9)
			} else {
				yynn816 = 6
				for _, b := range yyq816 {
					if b {
						yynn816++
					}
				}
				r.EncodeMapStart(yynn816)
				yynn816 = 0
			}
			if yyr816 || yy2arr816 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq816[0] {
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq816[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("account"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				}
			}
			if yyr816 || yy2arr816 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym821 := z.EncBinary()
				_ = yym821
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("href"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym822 := z.EncBinary()
				_ = yym822
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			}
			if yyr816 || yy2arr816 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym824 := z.EncBinary()
				_ = yym824
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("id"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym825 := z.EncBinary()
				_ = yym825
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			}
			if yyr816 || yy2arr816 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq816[3] {
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq816[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("links"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				}
			}
			if yyr816 || yy2arr816 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym830 := z.EncBinary()
				_ = yym830
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym831 := z.EncBinary()
				_ = yym831
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			}
			if yyr816 || yy2arr816 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq816[5] {
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy833 := *x.Rating
						yym834 := z.EncBinary()
						_ = yym834
						if false {
						} else {
							r.EncodeInt(int64(yy833))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq816[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("rating"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy835 := *x.Rating
						yym836 := z.EncBinary()
						_ = yym836
						if false {
						} else {
							r.EncodeInt(int64(yy835))
						}
					}
				}
			}
			if yyr816 || yy2arr816 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym838 := z.EncBinary()
				_ = yym838
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Varietal))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("varietal"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym839 := z.EncBinary()
				_ = yym839
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Varietal))
				}
			}
			if yyr816 || yy2arr816 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym841 := z.EncBinary()
				_ = yym841
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vineyard))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("vineyard"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym842 := z.EncBinary()
				_ = yym842
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vineyard))
				}
			}
			if yyr816 || yy2arr816 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym844 := z.EncBinary()
				_ = yym844
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vintage))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("vintage"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym845 := z.EncBinary()
				_ = yym845
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vintage))
				}
			}
			if yyr816 || yy2arr816 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *Box) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym846 := z.DecBinary()
	_ = yym846
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct847 := r.ContainerType()
		if yyct847 == codecSelferValueTypeMap212 {
			yyl847 := r.ReadMapStart()
			if yyl847 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl847, d)
			}
		} else if yyct847 == codecSelferValueTypeArray212 {
			yyl847 := r.ReadArrayStart()
			if yyl847 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl847, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *Box) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys848Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys848Slc
	var yyhl848 bool = l >= 0
	for yyj848 := 0; ; yyj848++ {
		if yyhl848 {
			if yyj848 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys848Slc = r.DecodeBytes(yys848Slc, true, true)
		yys848 := string(yys848Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys848 {
		case "account":
			if r.TryDecodeAsNil() {
				if x.Account != nil {
					x.Account = nil
				}
			} else {
				if x.Account == nil {
					x.Account = new(Account)
				}
				x.Account.CodecDecodeSelf(d)
			}
		case "href":
			if r.TryDecodeAsNil() {
				x.Href = ""
			} else {
				x.Href = string(r.DecodeString())
			}
		case "id":
			if r.TryDecodeAsNil() {
				x.ID = 0
			} else {
				x.ID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "links":
			if r.TryDecodeAsNil() {
				if x.Links != nil {
					x.Links = nil
				}
			} else {
				if x.Links == nil {
					x.Links = new(BoxLinks)
				}
				x.Links.CodecDecodeSelf(d)
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "rating":
			if r.TryDecodeAsNil() {
				if x.Rating != nil {
					x.Rating = nil
				}
			} else {
				if x.Rating == nil {
					x.Rating = new(int)
				}
				yym855 := z.DecBinary()
				_ = yym855
				if false {
				} else {
					*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
				}
			}
		case "varietal":
			if r.TryDecodeAsNil() {
				x.Varietal = ""
			} else {
				x.Varietal = string(r.DecodeString())
			}
		case "vineyard":
			if r.TryDecodeAsNil() {
				x.Vineyard = ""
			} else {
				x.Vineyard = string(r.DecodeString())
			}
		case "vintage":
			if r.TryDecodeAsNil() {
				x.Vintage = ""
			} else {
				x.Vintage = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys848)
		} // end switch yys848
	} // end for yyj848
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *Box) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj859 int
	var yyb859 bool
	var yyhl859 bool = l >= 0
	yyj859++
	if yyhl859 {
		yyb859 = yyj859 > l
	} else {
		yyb859 = r.CheckBreak()
	}
	if yyb859 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Account != nil {
			x.Account = nil
		}
	} else {
		if x.Account == nil {
			x.Account = new(Account)
		}
		x.Account.CodecDecodeSelf(d)
	}
	yyj859++
	if yyhl859 {
		yyb859 = yyj859 > l
	} else {
		yyb859 = r.CheckBreak()
	}
	if yyb859 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Href = ""
	} else {
		x.Href = string(r.DecodeString())
	}
	yyj859++
	if yyhl859 {
		yyb859 = yyj859 > l
	} else {
		yyb859 = r.CheckBreak()
	}
	if yyb859 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.ID = 0
	} else {
		x.ID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj859++
	if yyhl859 {
		yyb859 = yyj859 > l
	} else {
		yyb859 = r.CheckBreak()
	}
	if yyb859 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Links != nil {
			x.Links = nil
		}
	} else {
		if x.Links == nil {
			x.Links = new(BoxLinks)
		}
		x.Links.CodecDecodeSelf(d)
	}
	yyj859++
	if yyhl859 {
		yyb859 = yyj859 > l
	} else {
		yyb859 = r.CheckBreak()
	}
	if yyb859 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj859++
	if yyhl859 {
		yyb859 = yyj859 > l
	} else {
		yyb859 = r.CheckBreak()
	}
	if yyb859 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Rating != nil {
			x.Rating = nil
		}
	} else {
		if x.Rating == nil {
			x.Rating = new(int)
		}
		yym866 := z.DecBinary()
		_ = yym866
		if false {
		} else {
			*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
		}
	}
	yyj859++
	if yyhl859 {
		yyb859 = yyj859 > l
	} else {
		yyb859 = r.CheckBreak()
	}
	if yyb859 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Varietal = ""
	} else {
		x.Varietal = string(r.DecodeString())
	}
	yyj859++
	if yyhl859 {
		yyb859 = yyj859 > l
	} else {
		yyb859 = r.CheckBreak()
	}
	if yyb859 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Vineyard = ""
	} else {
		x.Vineyard = string(r.DecodeString())
	}
	yyj859++
	if yyhl859 {
		yyb859 = yyj859 > l
	} else {
		yyb859 = r.CheckBreak()
	}
	if yyb859 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Vintage = ""
	} else {
		x.Vintage = string(r.DecodeString())
	}
	for {
		yyj859++
		if yyhl859 {
			yyb859 = yyj859 > l
		} else {
			yyb859 = r.CheckBreak()
		}
		if yyb859 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj859-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *BoxTiny) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym870 := z.EncBinary()
		_ = yym870
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep871 := !z.EncBinary()
			yy2arr871 := z.EncBasicHandle().StructToArray
			var yyq871 [5]bool
			_, _, _ = yysep871, yyq871, yy2arr871
			const yyr871 bool = false
			yyq871[2] = x.Links != nil
			yyq871[4] = x.Rating != nil
			var yynn871 int
			if yyr871 || yy2arr871 {
				r.EncodeArrayStart(5)
			} else {
				yynn871 = 3
				for _, b := range yyq871 {
					if b {
						yynn871++
					}
				}
				r.EncodeMapStart(yynn871)
				yynn871 = 0
			}
			if yyr871 || yy2arr871 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym873 := z.EncBinary()
				_ = yym873
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("href"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym874 := z.EncBinary()
				_ = yym874
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			}
			if yyr871 || yy2arr871 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym876 := z.EncBinary()
				_ = yym876
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("id"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym877 := z.EncBinary()
				_ = yym877
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			}
			if yyr871 || yy2arr871 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq871[2] {
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq871[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("links"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				}
			}
			if yyr871 || yy2arr871 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym882 := z.EncBinary()
				_ = yym882
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym883 := z.EncBinary()
				_ = yym883
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			}
			if yyr871 || yy2arr871 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq871[4] {
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy885 := *x.Rating
						yym886 := z.EncBinary()
						_ = yym886
						if false {
						} else {
							r.EncodeInt(int64(yy885))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq871[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("rating"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy887 := *x.Rating
						yym888 := z.EncBinary()
						_ = yym888
						if false {
						} else {
							r.EncodeInt(int64(yy887))
						}
					}
				}
			}
			if yyr871 || yy2arr871 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *BoxTiny) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym889 := z.DecBinary()
	_ = yym889
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct890 := r.ContainerType()
		if yyct890 == codecSelferValueTypeMap212 {
			yyl890 := r.ReadMapStart()
			if yyl890 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl890, d)
			}
		} else if yyct890 == codecSelferValueTypeArray212 {
			yyl890 := r.ReadArrayStart()
			if yyl890 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl890, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *BoxTiny) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys891Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys891Slc
	var yyhl891 bool = l >= 0
	for yyj891 := 0; ; yyj891++ {
		if yyhl891 {
			if yyj891 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys891Slc = r.DecodeBytes(yys891Slc, true, true)
		yys891 := string(yys891Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys891 {
		case "href":
			if r.TryDecodeAsNil() {
				x.Href = ""
			} else {
				x.Href = string(r.DecodeString())
			}
		case "id":
			if r.TryDecodeAsNil() {
				x.ID = 0
			} else {
				x.ID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "links":
			if r.TryDecodeAsNil() {
				if x.Links != nil {
					x.Links = nil
				}
			} else {
				if x.Links == nil {
					x.Links = new(BoxLinks)
				}
				x.Links.CodecDecodeSelf(d)
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "rating":
			if r.TryDecodeAsNil() {
				if x.Rating != nil {
					x.Rating = nil
				}
			} else {
				if x.Rating == nil {
					x.Rating = new(int)
				}
				yym897 := z.DecBinary()
				_ = yym897
				if false {
				} else {
					*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys891)
		} // end switch yys891
	} // end for yyj891
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *BoxTiny) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj898 int
	var yyb898 bool
	var yyhl898 bool = l >= 0
	yyj898++
	if yyhl898 {
		yyb898 = yyj898 > l
	} else {
		yyb898 = r.CheckBreak()
	}
	if yyb898 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Href = ""
	} else {
		x.Href = string(r.DecodeString())
	}
	yyj898++
	if yyhl898 {
		yyb898 = yyj898 > l
	} else {
		yyb898 = r.CheckBreak()
	}
	if yyb898 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.ID = 0
	} else {
		x.ID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj898++
	if yyhl898 {
		yyb898 = yyj898 > l
	} else {
		yyb898 = r.CheckBreak()
	}
	if yyb898 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Links != nil {
			x.Links = nil
		}
	} else {
		if x.Links == nil {
			x.Links = new(BoxLinks)
		}
		x.Links.CodecDecodeSelf(d)
	}
	yyj898++
	if yyhl898 {
		yyb898 = yyj898 > l
	} else {
		yyb898 = r.CheckBreak()
	}
	if yyb898 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj898++
	if yyhl898 {
		yyb898 = yyj898 > l
	} else {
		yyb898 = r.CheckBreak()
	}
	if yyb898 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Rating != nil {
			x.Rating = nil
		}
	} else {
		if x.Rating == nil {
			x.Rating = new(int)
		}
		yym904 := z.DecBinary()
		_ = yym904
		if false {
		} else {
			*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
		}
	}
	for {
		yyj898++
		if yyhl898 {
			yyb898 = yyj898 > l
		} else {
			yyb898 = r.CheckBreak()
		}
		if yyb898 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj898-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *BoxFull) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym905 := z.EncBinary()
		_ = yym905
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep906 := !z.EncBinary()
			yy2arr906 := z.EncBasicHandle().StructToArray
			var yyq906 [17]bool
			_, _, _ = yysep906, yyq906, yy2arr906
			const yyr906 bool = false
			yyq906[0] = x.Account != nil
			yyq906[2] = x.Country != nil
			yyq906[3] = x.CreatedAt != nil
			yyq906[6] = x.Links != nil
			yyq906[8] = x.Rating != nil
			yyq906[9] = x.Region != nil
			yyq906[10] = x.Review != nil
			yyq906[11] = x.Sweetness != nil
			yyq906[12] = x.UpdatedAt != nil
			yyq906[16] = x.VinyardCounty != nil
			var yynn906 int
			if yyr906 || yy2arr906 {
				r.EncodeArrayStart(17)
			} else {
				yynn906 = 7
				for _, b := range yyq906 {
					if b {
						yynn906++
					}
				}
				r.EncodeMapStart(yynn906)
				yynn906 = 0
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq906[0] {
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq906[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("account"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym911 := z.EncBinary()
				_ = yym911
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Color))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("color"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym912 := z.EncBinary()
				_ = yym912
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Color))
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq906[2] {
					if x.Country == nil {
						r.EncodeNil()
					} else {
						yy914 := *x.Country
						yym915 := z.EncBinary()
						_ = yym915
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy914))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq906[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("country"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Country == nil {
						r.EncodeNil()
					} else {
						yy916 := *x.Country
						yym917 := z.EncBinary()
						_ = yym917
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy916))
						}
					}
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq906[3] {
					if x.CreatedAt == nil {
						r.EncodeNil()
					} else {
						yym919 := z.EncBinary()
						_ = yym919
						if false {
						} else if yym920 := z.TimeRtidIfBinc(); yym920 != 0 {
							r.EncodeBuiltin(yym920, x.CreatedAt)
						} else if z.HasExtensions() && z.EncExt(x.CreatedAt) {
						} else if yym919 {
							z.EncBinaryMarshal(x.CreatedAt)
						} else if !yym919 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CreatedAt)
						} else {
							z.EncFallback(x.CreatedAt)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq906[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("created_at"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.CreatedAt == nil {
						r.EncodeNil()
					} else {
						yym921 := z.EncBinary()
						_ = yym921
						if false {
						} else if yym922 := z.TimeRtidIfBinc(); yym922 != 0 {
							r.EncodeBuiltin(yym922, x.CreatedAt)
						} else if z.HasExtensions() && z.EncExt(x.CreatedAt) {
						} else if yym921 {
							z.EncBinaryMarshal(x.CreatedAt)
						} else if !yym921 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.CreatedAt)
						} else {
							z.EncFallback(x.CreatedAt)
						}
					}
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym924 := z.EncBinary()
				_ = yym924
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("href"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym925 := z.EncBinary()
				_ = yym925
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Href))
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym927 := z.EncBinary()
				_ = yym927
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("id"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym928 := z.EncBinary()
				_ = yym928
				if false {
				} else {
					r.EncodeInt(int64(x.ID))
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq906[6] {
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq906[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("links"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Links == nil {
						r.EncodeNil()
					} else {
						x.Links.CodecEncodeSelf(e)
					}
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym933 := z.EncBinary()
				_ = yym933
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym934 := z.EncBinary()
				_ = yym934
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Name))
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq906[8] {
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy936 := *x.Rating
						yym937 := z.EncBinary()
						_ = yym937
						if false {
						} else {
							r.EncodeInt(int64(yy936))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq906[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("rating"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Rating == nil {
						r.EncodeNil()
					} else {
						yy938 := *x.Rating
						yym939 := z.EncBinary()
						_ = yym939
						if false {
						} else {
							r.EncodeInt(int64(yy938))
						}
					}
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq906[9] {
					if x.Region == nil {
						r.EncodeNil()
					} else {
						yy941 := *x.Region
						yym942 := z.EncBinary()
						_ = yym942
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy941))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq906[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("region"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Region == nil {
						r.EncodeNil()
					} else {
						yy943 := *x.Region
						yym944 := z.EncBinary()
						_ = yym944
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy943))
						}
					}
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq906[10] {
					if x.Review == nil {
						r.EncodeNil()
					} else {
						yy946 := *x.Review
						yym947 := z.EncBinary()
						_ = yym947
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy946))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq906[10] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("review"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Review == nil {
						r.EncodeNil()
					} else {
						yy948 := *x.Review
						yym949 := z.EncBinary()
						_ = yym949
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy948))
						}
					}
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq906[11] {
					if x.Sweetness == nil {
						r.EncodeNil()
					} else {
						yy951 := *x.Sweetness
						yym952 := z.EncBinary()
						_ = yym952
						if false {
						} else {
							r.EncodeInt(int64(yy951))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq906[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("sweetness"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Sweetness == nil {
						r.EncodeNil()
					} else {
						yy953 := *x.Sweetness
						yym954 := z.EncBinary()
						_ = yym954
						if false {
						} else {
							r.EncodeInt(int64(yy953))
						}
					}
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq906[12] {
					if x.UpdatedAt == nil {
						r.EncodeNil()
					} else {
						yym956 := z.EncBinary()
						_ = yym956
						if false {
						} else if yym957 := z.TimeRtidIfBinc(); yym957 != 0 {
							r.EncodeBuiltin(yym957, x.UpdatedAt)
						} else if z.HasExtensions() && z.EncExt(x.UpdatedAt) {
						} else if yym956 {
							z.EncBinaryMarshal(x.UpdatedAt)
						} else if !yym956 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.UpdatedAt)
						} else {
							z.EncFallback(x.UpdatedAt)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq906[12] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("updated_at"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.UpdatedAt == nil {
						r.EncodeNil()
					} else {
						yym958 := z.EncBinary()
						_ = yym958
						if false {
						} else if yym959 := z.TimeRtidIfBinc(); yym959 != 0 {
							r.EncodeBuiltin(yym959, x.UpdatedAt)
						} else if z.HasExtensions() && z.EncExt(x.UpdatedAt) {
						} else if yym958 {
							z.EncBinaryMarshal(x.UpdatedAt)
						} else if !yym958 && z.IsJSONHandle() {
							z.EncJSONMarshal(x.UpdatedAt)
						} else {
							z.EncFallback(x.UpdatedAt)
						}
					}
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym961 := z.EncBinary()
				_ = yym961
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Varietal))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("varietal"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym962 := z.EncBinary()
				_ = yym962
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Varietal))
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym964 := z.EncBinary()
				_ = yym964
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vineyard))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("vineyard"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym965 := z.EncBinary()
				_ = yym965
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vineyard))
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				yym967 := z.EncBinary()
				_ = yym967
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vintage))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey212)
				r.EncodeString(codecSelferC_UTF8212, string("vintage"))
				z.EncSendContainerState(codecSelfer_containerMapValue212)
				yym968 := z.EncBinary()
				_ = yym968
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8212, string(x.Vintage))
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq906[16] {
					if x.VinyardCounty == nil {
						r.EncodeNil()
					} else {
						yy970 := *x.VinyardCounty
						yym971 := z.EncBinary()
						_ = yym971
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy970))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq906[16] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("vinyard_county"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.VinyardCounty == nil {
						r.EncodeNil()
					} else {
						yy972 := *x.VinyardCounty
						yym973 := z.EncBinary()
						_ = yym973
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy972))
						}
					}
				}
			}
			if yyr906 || yy2arr906 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *BoxFull) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym974 := z.DecBinary()
	_ = yym974
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct975 := r.ContainerType()
		if yyct975 == codecSelferValueTypeMap212 {
			yyl975 := r.ReadMapStart()
			if yyl975 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl975, d)
			}
		} else if yyct975 == codecSelferValueTypeArray212 {
			yyl975 := r.ReadArrayStart()
			if yyl975 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl975, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *BoxFull) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys976Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys976Slc
	var yyhl976 bool = l >= 0
	for yyj976 := 0; ; yyj976++ {
		if yyhl976 {
			if yyj976 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys976Slc = r.DecodeBytes(yys976Slc, true, true)
		yys976 := string(yys976Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys976 {
		case "account":
			if r.TryDecodeAsNil() {
				if x.Account != nil {
					x.Account = nil
				}
			} else {
				if x.Account == nil {
					x.Account = new(Account)
				}
				x.Account.CodecDecodeSelf(d)
			}
		case "color":
			if r.TryDecodeAsNil() {
				x.Color = ""
			} else {
				x.Color = string(r.DecodeString())
			}
		case "country":
			if r.TryDecodeAsNil() {
				if x.Country != nil {
					x.Country = nil
				}
			} else {
				if x.Country == nil {
					x.Country = new(string)
				}
				yym980 := z.DecBinary()
				_ = yym980
				if false {
				} else {
					*((*string)(x.Country)) = r.DecodeString()
				}
			}
		case "created_at":
			if r.TryDecodeAsNil() {
				if x.CreatedAt != nil {
					x.CreatedAt = nil
				}
			} else {
				if x.CreatedAt == nil {
					x.CreatedAt = new(time.Time)
				}
				yym982 := z.DecBinary()
				_ = yym982
				if false {
				} else if yym983 := z.TimeRtidIfBinc(); yym983 != 0 {
					r.DecodeBuiltin(yym983, x.CreatedAt)
				} else if z.HasExtensions() && z.DecExt(x.CreatedAt) {
				} else if yym982 {
					z.DecBinaryUnmarshal(x.CreatedAt)
				} else if !yym982 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.CreatedAt)
				} else {
					z.DecFallback(x.CreatedAt, false)
				}
			}
		case "href":
			if r.TryDecodeAsNil() {
				x.Href = ""
			} else {
				x.Href = string(r.DecodeString())
			}
		case "id":
			if r.TryDecodeAsNil() {
				x.ID = 0
			} else {
				x.ID = int(r.DecodeInt(codecSelferBitsize212))
			}
		case "links":
			if r.TryDecodeAsNil() {
				if x.Links != nil {
					x.Links = nil
				}
			} else {
				if x.Links == nil {
					x.Links = new(BoxLinks)
				}
				x.Links.CodecDecodeSelf(d)
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "rating":
			if r.TryDecodeAsNil() {
				if x.Rating != nil {
					x.Rating = nil
				}
			} else {
				if x.Rating == nil {
					x.Rating = new(int)
				}
				yym989 := z.DecBinary()
				_ = yym989
				if false {
				} else {
					*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
				}
			}
		case "region":
			if r.TryDecodeAsNil() {
				if x.Region != nil {
					x.Region = nil
				}
			} else {
				if x.Region == nil {
					x.Region = new(string)
				}
				yym991 := z.DecBinary()
				_ = yym991
				if false {
				} else {
					*((*string)(x.Region)) = r.DecodeString()
				}
			}
		case "review":
			if r.TryDecodeAsNil() {
				if x.Review != nil {
					x.Review = nil
				}
			} else {
				if x.Review == nil {
					x.Review = new(string)
				}
				yym993 := z.DecBinary()
				_ = yym993
				if false {
				} else {
					*((*string)(x.Review)) = r.DecodeString()
				}
			}
		case "sweetness":
			if r.TryDecodeAsNil() {
				if x.Sweetness != nil {
					x.Sweetness = nil
				}
			} else {
				if x.Sweetness == nil {
					x.Sweetness = new(int)
				}
				yym995 := z.DecBinary()
				_ = yym995
				if false {
				} else {
					*((*int)(x.Sweetness)) = int(r.DecodeInt(codecSelferBitsize212))
				}
			}
		case "updated_at":
			if r.TryDecodeAsNil() {
				if x.UpdatedAt != nil {
					x.UpdatedAt = nil
				}
			} else {
				if x.UpdatedAt == nil {
					x.UpdatedAt = new(time.Time)
				}
				yym997 := z.DecBinary()
				_ = yym997
				if false {
				} else if yym998 := z.TimeRtidIfBinc(); yym998 != 0 {
					r.DecodeBuiltin(yym998, x.UpdatedAt)
				} else if z.HasExtensions() && z.DecExt(x.UpdatedAt) {
				} else if yym997 {
					z.DecBinaryUnmarshal(x.UpdatedAt)
				} else if !yym997 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.UpdatedAt)
				} else {
					z.DecFallback(x.UpdatedAt, false)
				}
			}
		case "varietal":
			if r.TryDecodeAsNil() {
				x.Varietal = ""
			} else {
				x.Varietal = string(r.DecodeString())
			}
		case "vineyard":
			if r.TryDecodeAsNil() {
				x.Vineyard = ""
			} else {
				x.Vineyard = string(r.DecodeString())
			}
		case "vintage":
			if r.TryDecodeAsNil() {
				x.Vintage = ""
			} else {
				x.Vintage = string(r.DecodeString())
			}
		case "vinyard_county":
			if r.TryDecodeAsNil() {
				if x.VinyardCounty != nil {
					x.VinyardCounty = nil
				}
			} else {
				if x.VinyardCounty == nil {
					x.VinyardCounty = new(string)
				}
				yym1003 := z.DecBinary()
				_ = yym1003
				if false {
				} else {
					*((*string)(x.VinyardCounty)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys976)
		} // end switch yys976
	} // end for yyj976
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *BoxFull) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1004 int
	var yyb1004 bool
	var yyhl1004 bool = l >= 0
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Account != nil {
			x.Account = nil
		}
	} else {
		if x.Account == nil {
			x.Account = new(Account)
		}
		x.Account.CodecDecodeSelf(d)
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Color = ""
	} else {
		x.Color = string(r.DecodeString())
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Country != nil {
			x.Country = nil
		}
	} else {
		if x.Country == nil {
			x.Country = new(string)
		}
		yym1008 := z.DecBinary()
		_ = yym1008
		if false {
		} else {
			*((*string)(x.Country)) = r.DecodeString()
		}
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.CreatedAt != nil {
			x.CreatedAt = nil
		}
	} else {
		if x.CreatedAt == nil {
			x.CreatedAt = new(time.Time)
		}
		yym1010 := z.DecBinary()
		_ = yym1010
		if false {
		} else if yym1011 := z.TimeRtidIfBinc(); yym1011 != 0 {
			r.DecodeBuiltin(yym1011, x.CreatedAt)
		} else if z.HasExtensions() && z.DecExt(x.CreatedAt) {
		} else if yym1010 {
			z.DecBinaryUnmarshal(x.CreatedAt)
		} else if !yym1010 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.CreatedAt)
		} else {
			z.DecFallback(x.CreatedAt, false)
		}
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Href = ""
	} else {
		x.Href = string(r.DecodeString())
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.ID = 0
	} else {
		x.ID = int(r.DecodeInt(codecSelferBitsize212))
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Links != nil {
			x.Links = nil
		}
	} else {
		if x.Links == nil {
			x.Links = new(BoxLinks)
		}
		x.Links.CodecDecodeSelf(d)
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Rating != nil {
			x.Rating = nil
		}
	} else {
		if x.Rating == nil {
			x.Rating = new(int)
		}
		yym1017 := z.DecBinary()
		_ = yym1017
		if false {
		} else {
			*((*int)(x.Rating)) = int(r.DecodeInt(codecSelferBitsize212))
		}
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Region != nil {
			x.Region = nil
		}
	} else {
		if x.Region == nil {
			x.Region = new(string)
		}
		yym1019 := z.DecBinary()
		_ = yym1019
		if false {
		} else {
			*((*string)(x.Region)) = r.DecodeString()
		}
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Review != nil {
			x.Review = nil
		}
	} else {
		if x.Review == nil {
			x.Review = new(string)
		}
		yym1021 := z.DecBinary()
		_ = yym1021
		if false {
		} else {
			*((*string)(x.Review)) = r.DecodeString()
		}
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Sweetness != nil {
			x.Sweetness = nil
		}
	} else {
		if x.Sweetness == nil {
			x.Sweetness = new(int)
		}
		yym1023 := z.DecBinary()
		_ = yym1023
		if false {
		} else {
			*((*int)(x.Sweetness)) = int(r.DecodeInt(codecSelferBitsize212))
		}
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.UpdatedAt != nil {
			x.UpdatedAt = nil
		}
	} else {
		if x.UpdatedAt == nil {
			x.UpdatedAt = new(time.Time)
		}
		yym1025 := z.DecBinary()
		_ = yym1025
		if false {
		} else if yym1026 := z.TimeRtidIfBinc(); yym1026 != 0 {
			r.DecodeBuiltin(yym1026, x.UpdatedAt)
		} else if z.HasExtensions() && z.DecExt(x.UpdatedAt) {
		} else if yym1025 {
			z.DecBinaryUnmarshal(x.UpdatedAt)
		} else if !yym1025 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.UpdatedAt)
		} else {
			z.DecFallback(x.UpdatedAt, false)
		}
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Varietal = ""
	} else {
		x.Varietal = string(r.DecodeString())
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Vineyard = ""
	} else {
		x.Vineyard = string(r.DecodeString())
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		x.Vintage = ""
	} else {
		x.Vintage = string(r.DecodeString())
	}
	yyj1004++
	if yyhl1004 {
		yyb1004 = yyj1004 > l
	} else {
		yyb1004 = r.CheckBreak()
	}
	if yyb1004 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.VinyardCounty != nil {
			x.VinyardCounty = nil
		}
	} else {
		if x.VinyardCounty == nil {
			x.VinyardCounty = new(string)
		}
		yym1031 := z.DecBinary()
		_ = yym1031
		if false {
		} else {
			*((*string)(x.VinyardCounty)) = r.DecodeString()
		}
	}
	for {
		yyj1004++
		if yyhl1004 {
			yyb1004 = yyj1004 > l
		} else {
			yyb1004 = r.CheckBreak()
		}
		if yyb1004 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj1004-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *BoxLinks) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1032 := z.EncBinary()
		_ = yym1032
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1033 := !z.EncBinary()
			yy2arr1033 := z.EncBasicHandle().StructToArray
			var yyq1033 [1]bool
			_, _, _ = yysep1033, yyq1033, yy2arr1033
			const yyr1033 bool = false
			yyq1033[0] = x.Account != nil
			var yynn1033 int
			if yyr1033 || yy2arr1033 {
				r.EncodeArrayStart(1)
			} else {
				yynn1033 = 0
				for _, b := range yyq1033 {
					if b {
						yynn1033++
					}
				}
				r.EncodeMapStart(yynn1033)
				yynn1033 = 0
			}
			if yyr1033 || yy2arr1033 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq1033[0] {
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq1033[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("account"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Account == nil {
						r.EncodeNil()
					} else {
						x.Account.CodecEncodeSelf(e)
					}
				}
			}
			if yyr1033 || yy2arr1033 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *BoxLinks) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1037 := z.DecBinary()
	_ = yym1037
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1038 := r.ContainerType()
		if yyct1038 == codecSelferValueTypeMap212 {
			yyl1038 := r.ReadMapStart()
			if yyl1038 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl1038, d)
			}
		} else if yyct1038 == codecSelferValueTypeArray212 {
			yyl1038 := r.ReadArrayStart()
			if yyl1038 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl1038, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *BoxLinks) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1039Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1039Slc
	var yyhl1039 bool = l >= 0
	for yyj1039 := 0; ; yyj1039++ {
		if yyhl1039 {
			if yyj1039 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys1039Slc = r.DecodeBytes(yys1039Slc, true, true)
		yys1039 := string(yys1039Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys1039 {
		case "account":
			if r.TryDecodeAsNil() {
				if x.Account != nil {
					x.Account = nil
				}
			} else {
				if x.Account == nil {
					x.Account = new(AccountLink)
				}
				x.Account.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys1039)
		} // end switch yys1039
	} // end for yyj1039
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *BoxLinks) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1041 int
	var yyb1041 bool
	var yyhl1041 bool = l >= 0
	yyj1041++
	if yyhl1041 {
		yyb1041 = yyj1041 > l
	} else {
		yyb1041 = r.CheckBreak()
	}
	if yyb1041 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Account != nil {
			x.Account = nil
		}
	} else {
		if x.Account == nil {
			x.Account = new(AccountLink)
		}
		x.Account.CodecDecodeSelf(d)
	}
	for {
		yyj1041++
		if yyhl1041 {
			yyb1041 = yyj1041 > l
		} else {
			yyb1041 = r.CheckBreak()
		}
		if yyb1041 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj1041-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x *BottlePayload) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1043 := z.EncBinary()
		_ = yym1043
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1044 := !z.EncBinary()
			yy2arr1044 := z.EncBasicHandle().StructToArray
			var yyq1044 [10]bool
			_, _, _ = yysep1044, yyq1044, yy2arr1044
			const yyr1044 bool = false
			yyq1044[0] = x.Color != nil
			yyq1044[1] = x.Country != nil
			yyq1044[2] = x.Name != nil
			yyq1044[3] = x.Region != nil
			yyq1044[4] = x.Review != nil
			yyq1044[5] = x.Sweetness != nil
			yyq1044[6] = x.Varietal != nil
			yyq1044[7] = x.Vineyard != nil
			yyq1044[8] = x.Vintage != nil
			yyq1044[9] = x.VinyardCounty != nil
			var yynn1044 int
			if yyr1044 || yy2arr1044 {
				r.EncodeArrayStart(10)
			} else {
				yynn1044 = 0
				for _, b := range yyq1044 {
					if b {
						yynn1044++
					}
				}
				r.EncodeMapStart(yynn1044)
				yynn1044 = 0
			}
			if yyr1044 || yy2arr1044 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq1044[0] {
					if x.Color == nil {
						r.EncodeNil()
					} else {
						yy1046 := *x.Color
						yym1047 := z.EncBinary()
						_ = yym1047
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1046))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq1044[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("color"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Color == nil {
						r.EncodeNil()
					} else {
						yy1048 := *x.Color
						yym1049 := z.EncBinary()
						_ = yym1049
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1048))
						}
					}
				}
			}
			if yyr1044 || yy2arr1044 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq1044[1] {
					if x.Country == nil {
						r.EncodeNil()
					} else {
						yy1051 := *x.Country
						yym1052 := z.EncBinary()
						_ = yym1052
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1051))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq1044[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("country"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Country == nil {
						r.EncodeNil()
					} else {
						yy1053 := *x.Country
						yym1054 := z.EncBinary()
						_ = yym1054
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1053))
						}
					}
				}
			}
			if yyr1044 || yy2arr1044 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq1044[2] {
					if x.Name == nil {
						r.EncodeNil()
					} else {
						yy1056 := *x.Name
						yym1057 := z.EncBinary()
						_ = yym1057
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1056))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq1044[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("name"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Name == nil {
						r.EncodeNil()
					} else {
						yy1058 := *x.Name
						yym1059 := z.EncBinary()
						_ = yym1059
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1058))
						}
					}
				}
			}
			if yyr1044 || yy2arr1044 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq1044[3] {
					if x.Region == nil {
						r.EncodeNil()
					} else {
						yy1061 := *x.Region
						yym1062 := z.EncBinary()
						_ = yym1062
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1061))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq1044[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("region"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Region == nil {
						r.EncodeNil()
					} else {
						yy1063 := *x.Region
						yym1064 := z.EncBinary()
						_ = yym1064
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1063))
						}
					}
				}
			}
			if yyr1044 || yy2arr1044 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq1044[4] {
					if x.Review == nil {
						r.EncodeNil()
					} else {
						yy1066 := *x.Review
						yym1067 := z.EncBinary()
						_ = yym1067
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1066))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq1044[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("review"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Review == nil {
						r.EncodeNil()
					} else {
						yy1068 := *x.Review
						yym1069 := z.EncBinary()
						_ = yym1069
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1068))
						}
					}
				}
			}
			if yyr1044 || yy2arr1044 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq1044[5] {
					if x.Sweetness == nil {
						r.EncodeNil()
					} else {
						yy1071 := *x.Sweetness
						yym1072 := z.EncBinary()
						_ = yym1072
						if false {
						} else {
							r.EncodeInt(int64(yy1071))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq1044[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("sweetness"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Sweetness == nil {
						r.EncodeNil()
					} else {
						yy1073 := *x.Sweetness
						yym1074 := z.EncBinary()
						_ = yym1074
						if false {
						} else {
							r.EncodeInt(int64(yy1073))
						}
					}
				}
			}
			if yyr1044 || yy2arr1044 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq1044[6] {
					if x.Varietal == nil {
						r.EncodeNil()
					} else {
						yy1076 := *x.Varietal
						yym1077 := z.EncBinary()
						_ = yym1077
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1076))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq1044[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("varietal"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Varietal == nil {
						r.EncodeNil()
					} else {
						yy1078 := *x.Varietal
						yym1079 := z.EncBinary()
						_ = yym1079
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1078))
						}
					}
				}
			}
			if yyr1044 || yy2arr1044 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq1044[7] {
					if x.Vineyard == nil {
						r.EncodeNil()
					} else {
						yy1081 := *x.Vineyard
						yym1082 := z.EncBinary()
						_ = yym1082
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1081))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq1044[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("vineyard"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Vineyard == nil {
						r.EncodeNil()
					} else {
						yy1083 := *x.Vineyard
						yym1084 := z.EncBinary()
						_ = yym1084
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1083))
						}
					}
				}
			}
			if yyr1044 || yy2arr1044 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq1044[8] {
					if x.Vintage == nil {
						r.EncodeNil()
					} else {
						yy1086 := *x.Vintage
						yym1087 := z.EncBinary()
						_ = yym1087
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1086))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq1044[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("vintage"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.Vintage == nil {
						r.EncodeNil()
					} else {
						yy1088 := *x.Vintage
						yym1089 := z.EncBinary()
						_ = yym1089
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1088))
						}
					}
				}
			}
			if yyr1044 || yy2arr1044 {
				z.EncSendContainerState(codecSelfer_containerArrayElem212)
				if yyq1044[9] {
					if x.VinyardCounty == nil {
						r.EncodeNil()
					} else {
						yy1091 := *x.VinyardCounty
						yym1092 := z.EncBinary()
						_ = yym1092
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1091))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq1044[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey212)
					r.EncodeString(codecSelferC_UTF8212, string("vinyard_county"))
					z.EncSendContainerState(codecSelfer_containerMapValue212)
					if x.VinyardCounty == nil {
						r.EncodeNil()
					} else {
						yy1093 := *x.VinyardCounty
						yym1094 := z.EncBinary()
						_ = yym1094
						if false {
						} else {
							r.EncodeString(codecSelferC_UTF8212, string(yy1093))
						}
					}
				}
			}
			if yyr1044 || yy2arr1044 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd212)
			}
		}
	}
}

func (x *BottlePayload) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1095 := z.DecBinary()
	_ = yym1095
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1096 := r.ContainerType()
		if yyct1096 == codecSelferValueTypeMap212 {
			yyl1096 := r.ReadMapStart()
			if yyl1096 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd212)
			} else {
				x.codecDecodeSelfFromMap(yyl1096, d)
			}
		} else if yyct1096 == codecSelferValueTypeArray212 {
			yyl1096 := r.ReadArrayStart()
			if yyl1096 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd212)
			} else {
				x.codecDecodeSelfFromArray(yyl1096, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr212)
		}
	}
}

func (x *BottlePayload) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1097Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1097Slc
	var yyhl1097 bool = l >= 0
	for yyj1097 := 0; ; yyj1097++ {
		if yyhl1097 {
			if yyj1097 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey212)
		yys1097Slc = r.DecodeBytes(yys1097Slc, true, true)
		yys1097 := string(yys1097Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue212)
		switch yys1097 {
		case "color":
			if r.TryDecodeAsNil() {
				if x.Color != nil {
					x.Color = nil
				}
			} else {
				if x.Color == nil {
					x.Color = new(string)
				}
				yym1099 := z.DecBinary()
				_ = yym1099
				if false {
				} else {
					*((*string)(x.Color)) = r.DecodeString()
				}
			}
		case "country":
			if r.TryDecodeAsNil() {
				if x.Country != nil {
					x.Country = nil
				}
			} else {
				if x.Country == nil {
					x.Country = new(string)
				}
				yym1101 := z.DecBinary()
				_ = yym1101
				if false {
				} else {
					*((*string)(x.Country)) = r.DecodeString()
				}
			}
		case "name":
			if r.TryDecodeAsNil() {
				if x.Name != nil {
					x.Name = nil
				}
			} else {
				if x.Name == nil {
					x.Name = new(string)
				}
				yym1103 := z.DecBinary()
				_ = yym1103
				if false {
				} else {
					*((*string)(x.Name)) = r.DecodeString()
				}
			}
		case "region":
			if r.TryDecodeAsNil() {
				if x.Region != nil {
					x.Region = nil
				}
			} else {
				if x.Region == nil {
					x.Region = new(string)
				}
				yym1105 := z.DecBinary()
				_ = yym1105
				if false {
				} else {
					*((*string)(x.Region)) = r.DecodeString()
				}
			}
		case "review":
			if r.TryDecodeAsNil() {
				if x.Review != nil {
					x.Review = nil
				}
			} else {
				if x.Review == nil {
					x.Review = new(string)
				}
				yym1107 := z.DecBinary()
				_ = yym1107
				if false {
				} else {
					*((*string)(x.Review)) = r.DecodeString()
				}
			}
		case "sweetness":
			if r.TryDecodeAsNil() {
				if x.Sweetness != nil {
					x.Sweetness = nil
				}
			} else {
				if x.Sweetness == nil {
					x.Sweetness = new(int)
				}
				yym1109 := z.DecBinary()
				_ = yym1109
				if false {
				} else {
					*((*int)(x.Sweetness)) = int(r.DecodeInt(codecSelferBitsize212))
				}
			}
		case "varietal":
			if r.TryDecodeAsNil() {
				if x.Varietal != nil {
					x.Varietal = nil
				}
			} else {
				if x.Varietal == nil {
					x.Varietal = new(string)
				}
				yym1111 := z.DecBinary()
				_ = yym1111
				if false {
				} else {
					*((*string)(x.Varietal)) = r.DecodeString()
				}
			}
		case "vineyard":
			if r.TryDecodeAsNil() {
				if x.Vineyard != nil {
					x.Vineyard = nil
				}
			} else {
				if x.Vineyard == nil {
					x.Vineyard = new(string)
				}
				yym1113 := z.DecBinary()
				_ = yym1113
				if false {
				} else {
					*((*string)(x.Vineyard)) = r.DecodeString()
				}
			}
		case "vintage":
			if r.TryDecodeAsNil() {
				if x.Vintage != nil {
					x.Vintage = nil
				}
			} else {
				if x.Vintage == nil {
					x.Vintage = new(string)
				}
				yym1115 := z.DecBinary()
				_ = yym1115
				if false {
				} else {
					*((*string)(x.Vintage)) = r.DecodeString()
				}
			}
		case "vinyard_county":
			if r.TryDecodeAsNil() {
				if x.VinyardCounty != nil {
					x.VinyardCounty = nil
				}
			} else {
				if x.VinyardCounty == nil {
					x.VinyardCounty = new(string)
				}
				yym1117 := z.DecBinary()
				_ = yym1117
				if false {
				} else {
					*((*string)(x.VinyardCounty)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys1097)
		} // end switch yys1097
	} // end for yyj1097
	z.DecSendContainerState(codecSelfer_containerMapEnd212)
}

func (x *BottlePayload) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1118 int
	var yyb1118 bool
	var yyhl1118 bool = l >= 0
	yyj1118++
	if yyhl1118 {
		yyb1118 = yyj1118 > l
	} else {
		yyb1118 = r.CheckBreak()
	}
	if yyb1118 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Color != nil {
			x.Color = nil
		}
	} else {
		if x.Color == nil {
			x.Color = new(string)
		}
		yym1120 := z.DecBinary()
		_ = yym1120
		if false {
		} else {
			*((*string)(x.Color)) = r.DecodeString()
		}
	}
	yyj1118++
	if yyhl1118 {
		yyb1118 = yyj1118 > l
	} else {
		yyb1118 = r.CheckBreak()
	}
	if yyb1118 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Country != nil {
			x.Country = nil
		}
	} else {
		if x.Country == nil {
			x.Country = new(string)
		}
		yym1122 := z.DecBinary()
		_ = yym1122
		if false {
		} else {
			*((*string)(x.Country)) = r.DecodeString()
		}
	}
	yyj1118++
	if yyhl1118 {
		yyb1118 = yyj1118 > l
	} else {
		yyb1118 = r.CheckBreak()
	}
	if yyb1118 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Name != nil {
			x.Name = nil
		}
	} else {
		if x.Name == nil {
			x.Name = new(string)
		}
		yym1124 := z.DecBinary()
		_ = yym1124
		if false {
		} else {
			*((*string)(x.Name)) = r.DecodeString()
		}
	}
	yyj1118++
	if yyhl1118 {
		yyb1118 = yyj1118 > l
	} else {
		yyb1118 = r.CheckBreak()
	}
	if yyb1118 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Region != nil {
			x.Region = nil
		}
	} else {
		if x.Region == nil {
			x.Region = new(string)
		}
		yym1126 := z.DecBinary()
		_ = yym1126
		if false {
		} else {
			*((*string)(x.Region)) = r.DecodeString()
		}
	}
	yyj1118++
	if yyhl1118 {
		yyb1118 = yyj1118 > l
	} else {
		yyb1118 = r.CheckBreak()
	}
	if yyb1118 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Review != nil {
			x.Review = nil
		}
	} else {
		if x.Review == nil {
			x.Review = new(string)
		}
		yym1128 := z.DecBinary()
		_ = yym1128
		if false {
		} else {
			*((*string)(x.Review)) = r.DecodeString()
		}
	}
	yyj1118++
	if yyhl1118 {
		yyb1118 = yyj1118 > l
	} else {
		yyb1118 = r.CheckBreak()
	}
	if yyb1118 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Sweetness != nil {
			x.Sweetness = nil
		}
	} else {
		if x.Sweetness == nil {
			x.Sweetness = new(int)
		}
		yym1130 := z.DecBinary()
		_ = yym1130
		if false {
		} else {
			*((*int)(x.Sweetness)) = int(r.DecodeInt(codecSelferBitsize212))
		}
	}
	yyj1118++
	if yyhl1118 {
		yyb1118 = yyj1118 > l
	} else {
		yyb1118 = r.CheckBreak()
	}
	if yyb1118 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Varietal != nil {
			x.Varietal = nil
		}
	} else {
		if x.Varietal == nil {
			x.Varietal = new(string)
		}
		yym1132 := z.DecBinary()
		_ = yym1132
		if false {
		} else {
			*((*string)(x.Varietal)) = r.DecodeString()
		}
	}
	yyj1118++
	if yyhl1118 {
		yyb1118 = yyj1118 > l
	} else {
		yyb1118 = r.CheckBreak()
	}
	if yyb1118 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Vineyard != nil {
			x.Vineyard = nil
		}
	} else {
		if x.Vineyard == nil {
			x.Vineyard = new(string)
		}
		yym1134 := z.DecBinary()
		_ = yym1134
		if false {
		} else {
			*((*string)(x.Vineyard)) = r.DecodeString()
		}
	}
	yyj1118++
	if yyhl1118 {
		yyb1118 = yyj1118 > l
	} else {
		yyb1118 = r.CheckBreak()
	}
	if yyb1118 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.Vintage != nil {
			x.Vintage = nil
		}
	} else {
		if x.Vintage == nil {
			x.Vintage = new(string)
		}
		yym1136 := z.DecBinary()
		_ = yym1136
		if false {
		} else {
			*((*string)(x.Vintage)) = r.DecodeString()
		}
	}
	yyj1118++
	if yyhl1118 {
		yyb1118 = yyj1118 > l
	} else {
		yyb1118 = r.CheckBreak()
	}
	if yyb1118 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd212)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem212)
	if r.TryDecodeAsNil() {
		if x.VinyardCounty != nil {
			x.VinyardCounty = nil
		}
	} else {
		if x.VinyardCounty == nil {
			x.VinyardCounty = new(string)
		}
		yym1138 := z.DecBinary()
		_ = yym1138
		if false {
		} else {
			*((*string)(x.VinyardCounty)) = r.DecodeString()
		}
	}
	for {
		yyj1118++
		if yyhl1118 {
			yyb1118 = yyj1118 > l
		} else {
			yyb1118 = r.CheckBreak()
		}
		if yyb1118 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem212)
		z.DecStructFieldNotFound(yyj1118-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x codecSelfer212) encBottleCollection(v BottleCollection, e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1139 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem212)
		if yyv1139 == nil {
			r.EncodeNil()
		} else {
			yyv1139.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x codecSelfer212) decBottleCollection(v *BottleCollection, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1141 := *v
	yyh1141, yyl1141 := z.DecSliceHelperStart()
	var yyc1141 bool
	_ = yyc1141
	if yyl1141 == 0 {
		if yyv1141 == nil {
			yyv1141 = []*Bottle{}
			yyc1141 = true
		} else if len(yyv1141) != 0 {
			yyv1141 = yyv1141[:0]
			yyc1141 = true
		}
	} else if yyl1141 > 0 {
		var yyrr1141, yyrl1141 int
		var yyrt1141 bool
		_, _ = yyrl1141, yyrt1141
		yyrr1141 = yyl1141 // len(yyv1141)
		if yyl1141 > cap(yyv1141) {

			yyrg1141 := len(yyv1141) > 0
			yyv21141 := yyv1141
			yyrl1141, yyrt1141 = z.DecInferLen(yyl1141, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt1141 {
				if yyrl1141 <= cap(yyv1141) {
					yyv1141 = yyv1141[:yyrl1141]
				} else {
					yyv1141 = make([]*Bottle, yyrl1141)
				}
			} else {
				yyv1141 = make([]*Bottle, yyrl1141)
			}
			yyc1141 = true
			yyrr1141 = len(yyv1141)
			if yyrg1141 {
				copy(yyv1141, yyv21141)
			}
		} else if yyl1141 != len(yyv1141) {
			yyv1141 = yyv1141[:yyl1141]
			yyc1141 = true
		}
		yyj1141 := 0
		for ; yyj1141 < yyrr1141; yyj1141++ {
			yyh1141.ElemContainerState(yyj1141)
			if r.TryDecodeAsNil() {
				if yyv1141[yyj1141] != nil {
					*yyv1141[yyj1141] = Bottle{}
				}
			} else {
				if yyv1141[yyj1141] == nil {
					yyv1141[yyj1141] = new(Bottle)
				}
				yyw1142 := yyv1141[yyj1141]
				yyw1142.CodecDecodeSelf(d)
			}

		}
		if yyrt1141 {
			for ; yyj1141 < yyl1141; yyj1141++ {
				yyv1141 = append(yyv1141, nil)
				yyh1141.ElemContainerState(yyj1141)
				if r.TryDecodeAsNil() {
					if yyv1141[yyj1141] != nil {
						*yyv1141[yyj1141] = Bottle{}
					}
				} else {
					if yyv1141[yyj1141] == nil {
						yyv1141[yyj1141] = new(Bottle)
					}
					yyw1143 := yyv1141[yyj1141]
					yyw1143.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1141 := 0
		for ; !r.CheckBreak(); yyj1141++ {

			if yyj1141 >= len(yyv1141) {
				yyv1141 = append(yyv1141, nil) // var yyz1141 *Bottle
				yyc1141 = true
			}
			yyh1141.ElemContainerState(yyj1141)
			if yyj1141 < len(yyv1141) {
				if r.TryDecodeAsNil() {
					if yyv1141[yyj1141] != nil {
						*yyv1141[yyj1141] = Bottle{}
					}
				} else {
					if yyv1141[yyj1141] == nil {
						yyv1141[yyj1141] = new(Bottle)
					}
					yyw1144 := yyv1141[yyj1141]
					yyw1144.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1141 < len(yyv1141) {
			yyv1141 = yyv1141[:yyj1141]
			yyc1141 = true
		} else if yyj1141 == 0 && yyv1141 == nil {
			yyv1141 = []*Bottle{}
			yyc1141 = true
		}
	}
	yyh1141.End()
	if yyc1141 {
		*v = yyv1141
	}
}

func (x codecSelfer212) encBottleTinyCollection(v BottleTinyCollection, e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1145 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem212)
		if yyv1145 == nil {
			r.EncodeNil()
		} else {
			yyv1145.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x codecSelfer212) decBottleTinyCollection(v *BottleTinyCollection, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1147 := *v
	yyh1147, yyl1147 := z.DecSliceHelperStart()
	var yyc1147 bool
	_ = yyc1147
	if yyl1147 == 0 {
		if yyv1147 == nil {
			yyv1147 = []*BottleTiny{}
			yyc1147 = true
		} else if len(yyv1147) != 0 {
			yyv1147 = yyv1147[:0]
			yyc1147 = true
		}
	} else if yyl1147 > 0 {
		var yyrr1147, yyrl1147 int
		var yyrt1147 bool
		_, _ = yyrl1147, yyrt1147
		yyrr1147 = yyl1147 // len(yyv1147)
		if yyl1147 > cap(yyv1147) {

			yyrg1147 := len(yyv1147) > 0
			yyv21147 := yyv1147
			yyrl1147, yyrt1147 = z.DecInferLen(yyl1147, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt1147 {
				if yyrl1147 <= cap(yyv1147) {
					yyv1147 = yyv1147[:yyrl1147]
				} else {
					yyv1147 = make([]*BottleTiny, yyrl1147)
				}
			} else {
				yyv1147 = make([]*BottleTiny, yyrl1147)
			}
			yyc1147 = true
			yyrr1147 = len(yyv1147)
			if yyrg1147 {
				copy(yyv1147, yyv21147)
			}
		} else if yyl1147 != len(yyv1147) {
			yyv1147 = yyv1147[:yyl1147]
			yyc1147 = true
		}
		yyj1147 := 0
		for ; yyj1147 < yyrr1147; yyj1147++ {
			yyh1147.ElemContainerState(yyj1147)
			if r.TryDecodeAsNil() {
				if yyv1147[yyj1147] != nil {
					*yyv1147[yyj1147] = BottleTiny{}
				}
			} else {
				if yyv1147[yyj1147] == nil {
					yyv1147[yyj1147] = new(BottleTiny)
				}
				yyw1148 := yyv1147[yyj1147]
				yyw1148.CodecDecodeSelf(d)
			}

		}
		if yyrt1147 {
			for ; yyj1147 < yyl1147; yyj1147++ {
				yyv1147 = append(yyv1147, nil)
				yyh1147.ElemContainerState(yyj1147)
				if r.TryDecodeAsNil() {
					if yyv1147[yyj1147] != nil {
						*yyv1147[yyj1147] = BottleTiny{}
					}
				} else {
					if yyv1147[yyj1147] == nil {
						yyv1147[yyj1147] = new(BottleTiny)
					}
					yyw1149 := yyv1147[yyj1147]
					yyw1149.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1147 := 0
		for ; !r.CheckBreak(); yyj1147++ {

			if yyj1147 >= len(yyv1147) {
				yyv1147 = append(yyv1147, nil) // var yyz1147 *BottleTiny
				yyc1147 = true
			}
			yyh1147.ElemContainerState(yyj1147)
			if yyj1147 < len(yyv1147) {
				if r.TryDecodeAsNil() {
					if yyv1147[yyj1147] != nil {
						*yyv1147[yyj1147] = BottleTiny{}
					}
				} else {
					if yyv1147[yyj1147] == nil {
						yyv1147[yyj1147] = new(BottleTiny)
					}
					yyw1150 := yyv1147[yyj1147]
					yyw1150.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1147 < len(yyv1147) {
			yyv1147 = yyv1147[:yyj1147]
			yyc1147 = true
		} else if yyj1147 == 0 && yyv1147 == nil {
			yyv1147 = []*BottleTiny{}
			yyc1147 = true
		}
	}
	yyh1147.End()
	if yyc1147 {
		*v = yyv1147
	}
}

func (x codecSelfer212) encBottleLinksArray(v BottleLinksArray, e *codec1978.Encoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1151 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem212)
		if yyv1151 == nil {
			r.EncodeNil()
		} else {
			yyv1151.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd212)
}

func (x codecSelfer212) decBottleLinksArray(v *BottleLinksArray, d *codec1978.Decoder) {
	var h codecSelfer212
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1153 := *v
	yyh1153, yyl1153 := z.DecSliceHelperStart()
	var yyc1153 bool
	_ = yyc1153
	if yyl1153 == 0 {
		if yyv1153 == nil {
			yyv1153 = []*BottleLinks{}
			yyc1153 = true
		} else if len(yyv1153) != 0 {
			yyv1153 = yyv1153[:0]
			yyc1153 = true
		}
	} else if yyl1153 > 0 {
		var yyrr1153, yyrl1153 int
		var yyrt1153 bool
		_, _ = yyrl1153, yyrt1153
		yyrr1153 = yyl1153 // len(yyv1153)
		if yyl1153 > cap(yyv1153) {

			yyrg1153 := len(yyv1153) > 0
			yyv21153 := yyv1153
			yyrl1153, yyrt1153 = z.DecInferLen(yyl1153, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt1153 {
				if yyrl1153 <= cap(yyv1153) {
					yyv1153 = yyv1153[:yyrl1153]
				} else {
					yyv1153 = make([]*BottleLinks, yyrl1153)
				}
			} else {
				yyv1153 = make([]*BottleLinks, yyrl1153)
			}
			yyc1153 = true
			yyrr1153 = len(yyv1153)
			if yyrg1153 {
				copy(yyv1153, yyv21153)
			}
		} else if yyl1153 != len(yyv1153) {
			yyv1153 = yyv1153[:yyl1153]
			yyc1153 = true
		}
		yyj1153 := 0
		for ; yyj1153 < yyrr1153; yyj1153++ {
			yyh1153.ElemContainerState(yyj1153)
			if r.TryDecodeAsNil() {
				if yyv1153[yyj1153] != nil {
					*yyv1153[yyj1153] = BottleLinks{}
				}
			} else {
				if yyv1153[yyj1153] == nil {
					yyv1153[yyj1153] = new(BottleLinks)
				}
				yyw1154 := yyv1153[yyj1153]
				yyw1154.CodecDecodeSelf(d)
			}

		}
		if yyrt1153 {
			for ; yyj1153 < yyl1153; yyj1153++ {
				yyv1153 = append(yyv1153, nil)
				yyh1153.ElemContainerState(yyj1153)
				if r.TryDecodeAsNil() {
					if yyv1153[yyj1153] != nil {
						*yyv1153[yyj1153] = BottleLinks{}
					}
				} else {
					if yyv1153[yyj1153] == nil {
						yyv1153[yyj1153] = new(BottleLinks)
					}
					yyw1155 := yyv1153[yyj1153]
					yyw1155.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1153 := 0
		for ; !r.CheckBreak(); yyj1153++ {

			if yyj1153 >= len(yyv1153) {
				yyv1153 = append(yyv1153, nil) // var yyz1153 *BottleLinks
				yyc1153 = true
			}
			yyh1153.ElemContainerState(yyj1153)
			if yyj1153 < len(yyv1153) {
				if r.TryDecodeAsNil() {
					if yyv1153[yyj1153] != nil {
						*yyv1153[yyj1153] = BottleLinks{}
					}
				} else {
					if yyv1153[yyj1153] == nil {
						yyv1153[yyj1153] = new(BottleLinks)
					}
					yyw1156 := yyv1153[yyj1153]
					yyw1156.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1153 < len(yyv1153) {
			yyv1153 = yyv1153[:yyj1153]
			yyc1153 = true
		} else if yyj1153 == 0 && yyv1153 == nil {
			yyv1153 = []*BottleLinks{}
			yyc1153 = true
		}
	}
	yyh1153.End()
	if yyc1153 {
		*v = yyv1153
	}
}
